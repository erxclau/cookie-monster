import"./modulepreload-polyfill.c7c6310f.js";/* empty css             */import"./graphic.b50f7b1c.js";import{p as A}from"./pym.v1.e4649dc4.js";import{s as h,d as v}from"./download-image.15bf44c5.js";import{c as u}from"./grouped.df1e3f00.js";import{V as S,s as C,r as j,b as O}from"./set-display.8240a882.js";import{y as z,c as G,l as $,m as E,b as L}from"./axis.be3035b7.js";import{s as M,a as R}from"./stack.81967616.js";import{b as V,o as W}from"./band.da707044.js";import"./util.82aea728.js";import"./array.a075a4a0.js";class X extends S{constructor(){super(),this.height(300),this.margin({top:20,right:20,left:30,bottom:20}),this.color(()=>"steelblue"),this.label(s=>s[1]),this.resize(!0),this.redraw(!1),this.wrappx(50),this.yAxis(z),this.xAxis(G),this.y=$(),this.x=null}defaultYScale(s){const t=E(s.values(),i=>M(this.keys.map(e=>i[e])));return L().domain([0,t])}defaultXScale(s){return V().domain(s.keys()).padding(.3)}bar(s){const t=this.y.get(this.svg.node());return this.getSelectionWithRedrawContext(s).attr("class","bar").attr("y",e=>t(e[1])).attr("height",([e,r])=>t(e)-t(r))}draw(s){s.each((t,i,e)=>{var p,g;this.keys=Object.keys(t.values().next().value);const{top:r,left:c,bottom:m,right:x}=this.margin(),n=e[i],l=h(n).attr("height",this.height()).attr("class","stacked-column-chart");this.svg=l,this.x=(p=this.xScale())!=null?p:this.defaultXScale(t),this.y.set(n,(g=this.yScale())!=null?g:this.defaultYScale(t)).range([this.height()-m,r]);const f=this.appendOnce("g","y-axis").attr("transform",`translate(${c}, 0)`),y=this.appendOnce("g","x-axis").attr("transform",`translate(0, ${this.height()-m})`),b=R().keys(this.keys)(t.values()),w=l.selectAll(".bar-group").data(b).join("g").attr("class","bar-group").attr("fill",this.color()).selectAll(".bar").data(o=>o).join("rect").call(this.bar.bind(this)),d=()=>{const o=this.getResponsiveWidth();l.attr("width",o),this.x.range([c,o-x]),y.call(this.xAxis().bind(this)(this.x)),f.call(this.yAxis().bind(this)(this.y.get(n))),w.attr("width",this.x.bandwidth()).attr("x",(B,k)=>this.x(Array.from(t.keys())[k]))};d(),h(window).on(`resize.${i}`,d)})}}const Y=async()=>{const a=j(u,t=>Object.fromEntries(t.map(({Comfort:i,Percent:e})=>[i,e])),t=>t.Politics),s=W().domain(new Set(u.map(t=>t.Comfort))).range(["MediumSeaGreen","lightgreen","pink","LightCoral"]);h("figure").append("svg").datum(a).call(t=>{console.time(),t.call(O(new X().color(({key:i})=>s(i)))),console.timeEnd()})};window.onresize=()=>{};window.onload=()=>{const a=new A.Child({polling:500});a.sendHeight(),a.onMessage("download",v),C(),Y()};
