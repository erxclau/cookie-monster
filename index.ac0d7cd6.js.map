{"mappings":"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","sources":["node_modules/pym.js/dist/pym.v1.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["/*! pym.js - v1.3.2 - 2018-02-13 */\n/*\n* Pym.js is library that resizes an iframe based on the width of the parent and the resulting height of the child.\n* Check out the docs at http://blog.apps.npr.org/pym.js/ or the readme at README.md for usage.\n*/\n\n/** @module pym */\n(function(factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    }\n    else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = factory();\n    } else {\n        window.pym = factory.call(this);\n    }\n})(function() {\n    var MESSAGE_DELIMITER = 'xPYMx';\n\n    var lib = {};\n\n    /**\n    * Create and dispatch a custom pym event\n    *\n    * @method _raiseCustomEvent\n    * @inner\n    *\n    * @param {String} eventName\n    */\n   var _raiseCustomEvent = function(eventName) {\n     var event = document.createEvent('Event');\n     event.initEvent('pym:' + eventName, true, true);\n     document.dispatchEvent(event);\n   };\n\n    /**\n    * Generic function for parsing URL params.\n    * Via http://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript\n    *\n    * @method _getParameterByName\n    * @inner\n    *\n    * @param {String} name The name of the paramter to get from the URL.\n    */\n    var _getParameterByName = function(name) {\n        var regex = new RegExp(\"[\\\\?&]\" + name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]') + '=([^&#]*)');\n        var results = regex.exec(location.search);\n\n        if (results === null) {\n            return '';\n        }\n\n        return decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    };\n\n    /**\n     * Check the message to make sure it comes from an acceptable xdomain.\n     * Defaults to '*' but can be overriden in config.\n     *\n     * @method _isSafeMessage\n     * @inner\n     *\n     * @param {Event} e The message event.\n     * @param {Object} settings Configuration.\n     */\n    var _isSafeMessage = function(e, settings) {\n        if (settings.xdomain !== '*') {\n            // If origin doesn't match our xdomain, return.\n            if (!e.origin.match(new RegExp(settings.xdomain + '$'))) { return; }\n        }\n\n        // Ignore events that do not carry string data #151\n        if (typeof e.data !== 'string') { return; }\n\n        return true;\n    };\n\n    var _isSafeUrl = function(url) {\n        // Adapted from angular 2 url sanitizer\n        var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp):|[^&:/?#]*(?:[/?#]|$))/gi;\n        if (!url.match(SAFE_URL_PATTERN)) { return; }\n        \n        return true;\n    };\n\n    /**\n     * Construct a message to send between frames.\n     *\n     * NB: We use string-building here because JSON message passing is\n     * not supported in all browsers.\n     *\n     * @method _makeMessage\n     * @inner\n     *\n     * @param {String} id The unique id of the message recipient.\n     * @param {String} messageType The type of message to send.\n     * @param {String} message The message to send.\n     */\n    var _makeMessage = function(id, messageType, message) {\n        var bits = ['pym', id, messageType, message];\n\n        return bits.join(MESSAGE_DELIMITER);\n    };\n\n    /**\n     * Construct a regex to validate and parse messages.\n     *\n     * @method _makeMessageRegex\n     * @inner\n     *\n     * @param {String} id The unique id of the message recipient.\n     */\n    var _makeMessageRegex = function(id) {\n        var bits = ['pym', id, '(\\\\S+)', '(.*)'];\n\n        return new RegExp('^' + bits.join(MESSAGE_DELIMITER) + '$');\n    };\n\n    /**\n    * Underscore implementation of getNow\n    *\n    * @method _getNow\n    * @inner\n    *\n    */\n    var _getNow = Date.now || function() {\n        return new Date().getTime();\n    };\n\n    /**\n    * Underscore implementation of throttle\n    *\n    * @method _throttle\n    * @inner\n    *\n    * @param {function} func Throttled function\n    * @param {number} wait Throttle wait time\n    * @param {object} options Throttle settings\n    */\n\n    var _throttle = function(func, wait, options) {\n        var context, args, result;\n        var timeout = null;\n        var previous = 0;\n        if (!options) {options = {};}\n        var later = function() {\n            previous = options.leading === false ? 0 : _getNow();\n            timeout = null;\n            result = func.apply(context, args);\n            if (!timeout) {context = args = null;}\n        };\n        return function() {\n            var now = _getNow();\n            if (!previous && options.leading === false) {previous = now;}\n            var remaining = wait - (now - previous);\n            context = this;\n            args = arguments;\n            if (remaining <= 0 || remaining > wait) {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }\n                previous = now;\n                result = func.apply(context, args);\n                if (!timeout) {context = args = null;}\n            } else if (!timeout && options.trailing !== false) {\n                timeout = setTimeout(later, remaining);\n            }\n            return result;\n        };\n    };\n\n    /**\n     * Clean autoInit Instances: those that point to contentless iframes\n     * @method _cleanAutoInitInstances\n     * @inner\n     */\n    var _cleanAutoInitInstances = function() {\n        var length = lib.autoInitInstances.length;\n\n        // Loop backwards to avoid index issues\n        for (var idx = length - 1; idx >= 0; idx--) {\n            var instance = lib.autoInitInstances[idx];\n            // If instance has been removed or is contentless then remove it\n            if (instance.el.getElementsByTagName('iframe').length &&\n                instance.el.getElementsByTagName('iframe')[0].contentWindow) {\n                continue;\n            }\n            else {\n                // Remove the reference to the removed or orphan instance\n                lib.autoInitInstances.splice(idx,1);\n            }\n        }\n    };\n\n    /**\n     * Store auto initialized Pym instances for further reference\n     * @name module:pym#autoInitInstances\n     * @type Array\n     * @default []\n     */\n    lib.autoInitInstances = [];\n\n    /**\n     * Initialize Pym for elements on page that have data-pym attributes.\n     * Expose autoinit in case we need to call it from the outside\n     * @instance\n     * @method autoInit\n     * @param {Boolean} doNotRaiseEvents flag to avoid sending custom events\n     */\n    lib.autoInit = function(doNotRaiseEvents) {\n        var elements = document.querySelectorAll('[data-pym-src]:not([data-pym-auto-initialized])');\n        var length = elements.length;\n\n        // Clean stored instances in case needed\n        _cleanAutoInitInstances();\n        for (var idx = 0; idx < length; ++idx) {\n            var element = elements[idx];\n            /*\n            * Mark automatically-initialized elements so they are not\n            * re-initialized if the user includes pym.js more than once in the\n            * same document.\n            */\n            element.setAttribute('data-pym-auto-initialized', '');\n\n            // Ensure elements have an id\n            if (element.id === '') {\n                element.id = 'pym-' + idx + \"-\" + Math.random().toString(36).substr(2,5);\n            }\n\n            var src = element.getAttribute('data-pym-src');\n\n            // List of data attributes to configure the component\n            // structure: {'attribute name': 'type'}\n            var settings = {'xdomain': 'string', 'title': 'string', 'name': 'string', 'id': 'string',\n                            'sandbox': 'string', 'allowfullscreen': 'boolean',\n                            'parenturlparam': 'string', 'parenturlvalue': 'string',\n                            'optionalparams': 'boolean', 'trackscroll': 'boolean',\n                            'scrollwait': 'number'};\n\n            var config = {};\n\n            for (var attribute in settings) {\n                // via https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute#Notes\n               if (element.getAttribute('data-pym-'+attribute) !== null) {\n                  switch (settings[attribute]) {\n                    case 'boolean':\n                       config[attribute] = !(element.getAttribute('data-pym-'+attribute) === 'false'); // jshint ignore:line\n                       break;\n                    case 'string':\n                       config[attribute] = element.getAttribute('data-pym-'+attribute);\n                       break;\n                    case 'number':\n                        var n = Number(element.getAttribute('data-pym-'+attribute));\n                        if (!isNaN(n)) {\n                            config[attribute] = n;\n                        }\n                        break;\n                    default:\n                       console.err('unrecognized attribute type');\n                  }\n               }\n            }\n\n            // Store references to autoinitialized pym instances\n            var parent = new lib.Parent(element.id, src, config);\n            lib.autoInitInstances.push(parent);\n        }\n\n        // Fire customEvent\n        if (!doNotRaiseEvents) {\n            _raiseCustomEvent(\"pym-initialized\");\n        }\n        // Return stored autoinitalized pym instances\n        return lib.autoInitInstances;\n    };\n\n    /**\n     * The Parent half of a response iframe.\n     *\n     * @memberof module:pym\n     * @class Parent\n     * @param {String} id The id of the div into which the iframe will be rendered. sets {@link module:pym.Parent~id}\n     * @param {String} url The url of the iframe source. sets {@link module:pym.Parent~url}\n     * @param {Object} [config] Configuration for the parent instance. sets {@link module:pym.Parent~settings}\n     * @param {string} [config.xdomain='*'] - xdomain to validate messages received\n     * @param {string} [config.title] - if passed it will be assigned to the iframe title attribute\n     * @param {string} [config.name] - if passed it will be assigned to the iframe name attribute\n     * @param {string} [config.id] - if passed it will be assigned to the iframe id attribute\n     * @param {boolean} [config.allowfullscreen] - if passed and different than false it will be assigned to the iframe allowfullscreen attribute\n     * @param {string} [config.sandbox] - if passed it will be assigned to the iframe sandbox attribute (we do not validate the syntax so be careful!!)\n     * @param {string} [config.parenturlparam] - if passed it will be override the default parentUrl query string parameter name passed to the iframe src\n     * @param {string} [config.parenturlvalue] - if passed it will be override the default parentUrl query string parameter value passed to the iframe src\n     * @param {string} [config.optionalparams] - if passed and different than false it will strip the querystring params parentUrl and parentTitle passed to the iframe src\n     * @param {boolean} [config.trackscroll] - if passed it will activate scroll tracking on the parent\n     * @param {number} [config.scrollwait] - if passed it will set the throttle wait in order to fire scroll messaging. Defaults to 100 ms.\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe iFrame}\n     */\n    lib.Parent = function(id, url, config) {\n        /**\n         * The id of the container element\n         *\n         * @memberof module:pym.Parent\n         * @member {string} id\n         * @inner\n         */\n        this.id = id;\n        /**\n         * The url that will be set as the iframe's src\n         *\n         * @memberof module:pym.Parent\n         * @member {String} url\n         * @inner\n         */\n        this.url = url;\n\n        /**\n         * The container DOM object\n         *\n         * @memberof module:pym.Parent\n         * @member {HTMLElement} el\n         * @inner\n         */\n        this.el = document.getElementById(id);\n        /**\n         * The contained child iframe\n         *\n         * @memberof module:pym.Parent\n         * @member {HTMLElement} iframe\n         * @inner\n         * @default null\n         */\n        this.iframe = null;\n        /**\n         * The parent instance settings, updated by the values passed in the config object\n         *\n         * @memberof module:pym.Parent\n         * @member {Object} settings\n         * @inner\n         */\n        this.settings = {\n            xdomain: '*',\n            optionalparams: true,\n            parenturlparam: 'parentUrl',\n            parenturlvalue: window.location.href,\n            trackscroll: false,\n            scrollwait: 100,\n        };\n        /**\n         * RegularExpression to validate the received messages\n         *\n         * @memberof module:pym.Parent\n         * @member {String} messageRegex\n         * @inner\n         */\n        this.messageRegex = _makeMessageRegex(this.id);\n        /**\n         * Stores the registered messageHandlers for each messageType\n         *\n         * @memberof module:pym.Parent\n         * @member {Object} messageHandlers\n         * @inner\n         */\n        this.messageHandlers = {};\n\n        // ensure a config object\n        config = (config || {});\n\n        /**\n         * Construct the iframe.\n         *\n         * @memberof module:pym.Parent\n         * @method _constructIframe\n         * @inner\n         */\n        this._constructIframe = function() {\n            // Calculate the width of this element.\n            var width = this.el.offsetWidth.toString();\n\n            // Create an iframe element attached to the document.\n            this.iframe = document.createElement('iframe');\n\n            // Save fragment id\n            var hash = '';\n            var hashIndex = this.url.indexOf('#');\n\n            if (hashIndex > -1) {\n                hash = this.url.substring(hashIndex, this.url.length);\n                this.url = this.url.substring(0, hashIndex);\n            }\n\n            // If the URL contains querystring bits, use them.\n            // Otherwise, just create a set of valid params.\n            if (this.url.indexOf('?') < 0) {\n                this.url += '?';\n            } else {\n                this.url += '&';\n            }\n\n            // Append the initial width as a querystring parameter\n            // and optional params if configured to do so\n            this.iframe.src = this.url + 'initialWidth=' + width +\n                                         '&childId=' + this.id;\n\n            if (this.settings.optionalparams) {\n                this.iframe.src += '&parentTitle=' + encodeURIComponent(document.title);\n                this.iframe.src += '&'+ this.settings.parenturlparam + '=' + encodeURIComponent(this.settings.parenturlvalue);\n            }\n            this.iframe.src +=hash;\n\n            // Set some attributes to this proto-iframe.\n            this.iframe.setAttribute('width', '100%');\n            this.iframe.setAttribute('scrolling', 'no');\n            this.iframe.setAttribute('marginheight', '0');\n            this.iframe.setAttribute('frameborder', '0');\n\n            if (this.settings.title) {\n                this.iframe.setAttribute('title', this.settings.title);\n            }\n\n            if (this.settings.allowfullscreen !== undefined && this.settings.allowfullscreen !== false) {\n                this.iframe.setAttribute('allowfullscreen','');\n            }\n\n            if (this.settings.sandbox !== undefined && typeof this.settings.sandbox === 'string') {\n                this.iframe.setAttribute('sandbox', this.settings.sandbox);\n            }\n\n            if (this.settings.id) {\n                if (!document.getElementById(this.settings.id)) {\n                    this.iframe.setAttribute('id', this.settings.id);\n                }\n            }\n\n            if (this.settings.name) {\n                this.iframe.setAttribute('name', this.settings.name);\n            }\n\n            // Replace the child content if needed\n            // (some CMSs might strip out empty elements)\n            while(this.el.firstChild) { this.el.removeChild(this.el.firstChild); }\n            // Append the iframe to our element.\n            this.el.appendChild(this.iframe);\n\n            // Add an event listener that will handle redrawing the child on resize.\n            window.addEventListener('resize', this._onResize);\n\n            // Add an event listener that will send the child the viewport.\n            if (this.settings.trackscroll) {\n                window.addEventListener('scroll', this._throttleOnScroll);\n            }\n        };\n\n        /**\n         * Send width on resize.\n         *\n         * @memberof module:pym.Parent\n         * @method _onResize\n         * @inner\n         */\n        this._onResize = function() {\n            this.sendWidth();\n            if (this.settings.trackscroll) {\n                this.sendViewportAndIFramePosition();\n            }\n        }.bind(this);\n\n        /**\n         * Send viewport and iframe info on scroll.\n         *\n         * @memberof module:pym.Parent\n         * @method _onScroll\n         * @inner\n         */\n        this._onScroll = function() {\n            this.sendViewportAndIFramePosition();\n        }.bind(this);\n\n        /**\n         * Fire all event handlers for a given message type.\n         *\n         * @memberof module:pym.Parent\n         * @method _fire\n         * @inner\n         *\n         * @param {String} messageType The type of message.\n         * @param {String} message The message data.\n         */\n        this._fire = function(messageType, message) {\n            if (messageType in this.messageHandlers) {\n                for (var i = 0; i < this.messageHandlers[messageType].length; i++) {\n                   this.messageHandlers[messageType][i].call(this, message);\n                }\n            }\n        };\n\n        /**\n         * Remove this parent from the page and unbind it's event handlers.\n         *\n         * @memberof module:pym.Parent\n         * @method remove\n         * @instance\n         */\n        this.remove = function() {\n            window.removeEventListener('message', this._processMessage);\n            window.removeEventListener('resize', this._onResize);\n\n            this.el.removeChild(this.iframe);\n            // _cleanAutoInitInstances in case this parent was autoInitialized\n            _cleanAutoInitInstances();\n        };\n\n        /**\n         * Process a new message from the child.\n         *\n         * @memberof module:pym.Parent\n         * @method _processMessage\n         * @inner\n         *\n         * @param {Event} e A message event.\n         */\n        this._processMessage = function(e) {\n            // First, punt if this isn't from an acceptable xdomain.\n            if (!_isSafeMessage(e, this.settings)) {\n                return;\n            }\n\n            // Discard object messages, we only care about strings\n            if (typeof e.data !== 'string') {\n                return;\n            }\n\n            // Grab the message from the child and parse it.\n            var match = e.data.match(this.messageRegex);\n\n            // If there's no match or too many matches in the message, punt.\n            if (!match || match.length !== 3) {\n                return false;\n            }\n\n            var messageType = match[1];\n            var message = match[2];\n\n            this._fire(messageType, message);\n        }.bind(this);\n\n        /**\n         * Resize iframe in response to new height message from child.\n         *\n         * @memberof module:pym.Parent\n         * @method _onHeightMessage\n         * @inner\n         *\n         * @param {String} message The new height.\n         */\n        this._onHeightMessage = function(message) {\n            /*\n             * Handle parent height message from child.\n             */\n            var height = parseInt(message);\n\n            this.iframe.setAttribute('height', height + 'px');\n        };\n\n        /**\n         * Navigate parent to a new url.\n         *\n         * @memberof module:pym.Parent\n         * @method _onNavigateToMessage\n         * @inner\n         *\n         * @param {String} message The url to navigate to.\n         */\n        this._onNavigateToMessage = function(message) {\n            /*\n             * Handle parent scroll message from child.\n             */\n             if (!_isSafeUrl(message)) {return;}\n            document.location.href = message;\n        };\n\n        /**\n         * Scroll parent to a given child position.\n         *\n         * @memberof module:pym.Parent\n         * @method _onScrollToChildPosMessage\n         * @inner\n         *\n         * @param {String} message The offset inside the child page.\n         */\n        this._onScrollToChildPosMessage = function(message) {\n            // Get the child container position using getBoundingClientRect + pageYOffset\n            // via https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n            var iframePos = document.getElementById(this.id).getBoundingClientRect().top + window.pageYOffset;\n\n            var totalOffset = iframePos + parseInt(message);\n            window.scrollTo(0, totalOffset);\n        };\n\n        /**\n         * Bind a callback to a given messageType from the child.\n         *\n         * Reserved message names are: \"height\", \"scrollTo\" and \"navigateTo\".\n         *\n         * @memberof module:pym.Parent\n         * @method onMessage\n         * @instance\n         *\n         * @param {String} messageType The type of message being listened for.\n         * @param {module:pym.Parent~onMessageCallback} callback The callback to invoke when a message of the given type is received.\n         */\n        this.onMessage = function(messageType, callback) {\n            if (!(messageType in this.messageHandlers)) {\n                this.messageHandlers[messageType] = [];\n            }\n\n            this.messageHandlers[messageType].push(callback);\n        };\n\n        /**\n         * @callback module:pym.Parent~onMessageCallback\n         * @param {String} message The message data.\n         */\n\n        /**\n         * Send a message to the the child.\n         *\n         * @memberof module:pym.Parent\n         * @method sendMessage\n         * @instance\n         *\n         * @param {String} messageType The type of message to send.\n         * @param {String} message The message data to send.\n         */\n        this.sendMessage = function(messageType, message) {\n            // When used alongside with pjax some references are lost\n            if (this.el.getElementsByTagName('iframe').length) {\n                if (this.el.getElementsByTagName('iframe')[0].contentWindow) {\n                    this.el.getElementsByTagName('iframe')[0].contentWindow\n                        .postMessage(_makeMessage(this.id, messageType, message), '*');\n                }\n                else {\n                    // Contentless child detected remove listeners and iframe\n                    this.remove();\n                }\n            }\n        };\n\n        /**\n         * Transmit the current iframe width to the child.\n         *\n         * You shouldn't need to call this directly.\n         *\n         * @memberof module:pym.Parent\n         * @method sendWidth\n         * @instance\n         */\n        this.sendWidth = function() {\n            var width = this.el.offsetWidth.toString();\n            this.sendMessage('width', width);\n        };\n\n        /**\n         * Transmit the current viewport and iframe position to the child.\n         * Sends viewport width, viewport height\n         * and iframe bounding rect top-left-bottom-right\n         * all separated by spaces\n         *\n         * You shouldn't need to call this directly.\n         *\n         * @memberof module:pym.Parent\n         * @method sendViewportAndIFramePosition\n         * @instance\n         */\n        this.sendViewportAndIFramePosition = function() {\n            var iframeRect = this.iframe.getBoundingClientRect();\n            var vWidth   = window.innerWidth || document.documentElement.clientWidth;\n            var vHeight  = window.innerHeight || document.documentElement.clientHeight;\n            var payload = vWidth + ' ' + vHeight;\n            payload += ' ' + iframeRect.top + ' ' + iframeRect.left;\n            payload += ' ' + iframeRect.bottom + ' ' + iframeRect.right;\n            this.sendMessage('viewport-iframe-position', payload);\n        };\n\n        // Add any overrides to settings coming from config.\n        for (var key in config) {\n            this.settings[key] = config[key];\n        }\n\n        /**\n         * Throttled scroll function.\n         *\n         * @memberof module:pym.Parent\n         * @method _throttleOnScroll\n         * @inner\n         */\n        this._throttleOnScroll = _throttle(this._onScroll.bind(this), this.settings.scrollwait);\n\n        // Bind required message handlers\n        this.onMessage('height', this._onHeightMessage);\n        this.onMessage('navigateTo', this._onNavigateToMessage);\n        this.onMessage('scrollToChildPos', this._onScrollToChildPosMessage);\n        this.onMessage('parentPositionInfo', this.sendViewportAndIFramePosition);\n\n        // Add a listener for processing messages from the child.\n        window.addEventListener('message', this._processMessage, false);\n\n        // Construct the iframe in the container element.\n        this._constructIframe();\n\n        return this;\n    };\n\n    /**\n     * The Child half of a responsive iframe.\n     *\n     * @memberof module:pym\n     * @class Child\n     * @param {Object} [config] Configuration for the child instance. sets {@link module:pym.Child~settings}\n     * @param {function} [config.renderCallback=null] Callback invoked after receiving a resize event from the parent, sets {@link module:pym.Child#settings.renderCallback}\n     * @param {string} [config.xdomain='*'] - xdomain to validate messages received\n     * @param {number} [config.polling=0] - polling frequency in milliseconds to send height to parent\n     * @param {number} [config.id] - parent container id used when navigating the child iframe to a new page but we want to keep it responsive.\n     * @param {string} [config.parenturlparam] - if passed it will be override the default parentUrl query string parameter name expected on the iframe src\n     */\n    lib.Child = function(config) {\n        /**\n         * The initial width of the parent page\n         *\n         * @memberof module:pym.Child\n         * @member {string} parentWidth\n         * @inner\n         */\n        this.parentWidth = null;\n        /**\n         * The id of the parent container\n         *\n         * @memberof module:pym.Child\n         * @member {String} id\n         * @inner\n         */\n        this.id = null;\n        /**\n         * The title of the parent page from document.title.\n         *\n         * @memberof module:pym.Child\n         * @member {String} parentTitle\n         * @inner\n         */\n        this.parentTitle = null;\n        /**\n         * The URL of the parent page from window.location.href.\n         *\n         * @memberof module:pym.Child\n         * @member {String} parentUrl\n         * @inner\n         */\n        this.parentUrl = null;\n        /**\n         * The settings for the child instance. Can be overriden by passing a config object to the child constructor\n         * i.e.: var pymChild = new pym.Child({renderCallback: render, xdomain: \"\\\\*\\.npr\\.org\"})\n         *\n         * @memberof module:pym.Child.settings\n         * @member {Object} settings - default settings for the child instance\n         * @inner\n         */\n        this.settings = {\n            renderCallback: null,\n            xdomain: '*',\n            polling: 0,\n            parenturlparam: 'parentUrl'\n        };\n\n        /**\n         * The timerId in order to be able to stop when polling is enabled\n         *\n         * @memberof module:pym.Child\n         * @member {String} timerId\n         * @inner\n         */\n        this.timerId = null;\n        /**\n         * RegularExpression to validate the received messages\n         *\n         * @memberof module:pym.Child\n         * @member {String} messageRegex\n         * @inner\n         */\n        this.messageRegex = null;\n        /**\n         * Stores the registered messageHandlers for each messageType\n         *\n         * @memberof module:pym.Child\n         * @member {Object} messageHandlers\n         * @inner\n         */\n        this.messageHandlers = {};\n\n        // Ensure a config object\n        config = (config || {});\n\n        /**\n         * Bind a callback to a given messageType from the child.\n         *\n         * Reserved message names are: \"width\".\n         *\n         * @memberof module:pym.Child\n         * @method onMessage\n         * @instance\n         *\n         * @param {String} messageType The type of message being listened for.\n         * @param {module:pym.Child~onMessageCallback} callback The callback to invoke when a message of the given type is received.\n         */\n        this.onMessage = function(messageType, callback) {\n\n            if (!(messageType in this.messageHandlers)) {\n                this.messageHandlers[messageType] = [];\n            }\n\n            this.messageHandlers[messageType].push(callback);\n        };\n\n        /**\n         * @callback module:pym.Child~onMessageCallback\n         * @param {String} message The message data.\n         */\n\n\n        /**\n         * Fire all event handlers for a given message type.\n         *\n         * @memberof module:pym.Child\n         * @method _fire\n         * @inner\n         *\n         * @param {String} messageType The type of message.\n         * @param {String} message The message data.\n         */\n        this._fire = function(messageType, message) {\n            /*\n             * Fire all event handlers for a given message type.\n             */\n            if (messageType in this.messageHandlers) {\n                for (var i = 0; i < this.messageHandlers[messageType].length; i++) {\n                   this.messageHandlers[messageType][i].call(this, message);\n                }\n            }\n        };\n\n        /**\n         * Process a new message from the parent.\n         *\n         * @memberof module:pym.Child\n         * @method _processMessage\n         * @inner\n         *\n         * @param {Event} e A message event.\n         */\n        this._processMessage = function(e) {\n            /*\n            * Process a new message from parent frame.\n            */\n            // First, punt if this isn't from an acceptable xdomain.\n            if (!_isSafeMessage(e, this.settings)) {\n                return;\n            }\n\n            // Discard object messages, we only care about strings\n            if (typeof e.data !== 'string') {\n                return;\n            }\n\n            // Get the message from the parent.\n            var match = e.data.match(this.messageRegex);\n\n            // If there's no match or it's a bad format, punt.\n            if (!match || match.length !== 3) { return; }\n\n            var messageType = match[1];\n            var message = match[2];\n\n            this._fire(messageType, message);\n        }.bind(this);\n\n        /**\n         * Resize iframe in response to new width message from parent.\n         *\n         * @memberof module:pym.Child\n         * @method _onWidthMessage\n         * @inner\n         *\n         * @param {String} message The new width.\n         */\n        this._onWidthMessage = function(message) {\n            /*\n             * Handle width message from the child.\n             */\n            var width = parseInt(message);\n\n            // Change the width if it's different.\n            if (width !== this.parentWidth) {\n                this.parentWidth = width;\n\n                // Call the callback function if it exists.\n                if (this.settings.renderCallback) {\n                    this.settings.renderCallback(width);\n                }\n\n                // Send the height back to the parent.\n                this.sendHeight();\n            }\n        };\n\n        /**\n         * Send a message to the the Parent.\n         *\n         * @memberof module:pym.Child\n         * @method sendMessage\n         * @instance\n         *\n         * @param {String} messageType The type of message to send.\n         * @param {String} message The message data to send.\n         */\n        this.sendMessage = function(messageType, message) {\n            /*\n             * Send a message to the parent.\n             */\n            window.parent.postMessage(_makeMessage(this.id, messageType, message), '*');\n        };\n\n        /**\n         * Transmit the current iframe height to the parent.\n         *\n         * Call this directly in cases where you manually alter the height of the iframe contents.\n         *\n         * @memberof module:pym.Child\n         * @method sendHeight\n         * @instance\n         */\n        this.sendHeight = function() {\n            // Get the child's height.\n            var height = document.getElementsByTagName('body')[0].offsetHeight.toString();\n\n            // Send the height to the parent.\n            this.sendMessage('height', height);\n\n            return height;\n        }.bind(this);\n\n        /**\n         * Ask parent to send the current viewport and iframe position information\n         *\n         * @memberof module:pym.Child\n         * @method sendHeight\n         * @instance\n         */\n        this.getParentPositionInfo = function() {\n            // Send the height to the parent.\n            this.sendMessage('parentPositionInfo');\n        };\n\n        /**\n         * Scroll parent to a given element id.\n         *\n         * @memberof module:pym.Child\n         * @method scrollParentTo\n         * @instance\n         *\n         * @param {String} hash The id of the element to scroll to.\n         */\n        this.scrollParentTo = function(hash) {\n            this.sendMessage('navigateTo', '#' + hash);\n        };\n\n        /**\n         * Navigate parent to a given url.\n         *\n         * @memberof module:pym.Child\n         * @method navigateParentTo\n         * @instance\n         *\n         * @param {String} url The url to navigate to.\n         */\n        this.navigateParentTo = function(url) {\n            this.sendMessage('navigateTo', url);\n        };\n\n        /**\n         * Scroll parent to a given child element id.\n         *\n         * @memberof module:pym.Child\n         * @method scrollParentToChildEl\n         * @instance\n         *\n         * @param {String} id The id of the child element to scroll to.\n         */\n        this.scrollParentToChildEl = function(id) {\n            // Get the child element position using getBoundingClientRect + pageYOffset\n            // via https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n            var topPos = document.getElementById(id).getBoundingClientRect().top + window.pageYOffset;\n            this.scrollParentToChildPos(topPos);\n        };\n\n        /**\n         * Scroll parent to a particular child offset.\n         *\n         * @memberof module:pym.Child\n         * @method scrollParentToChildPos\n         * @instance\n         *\n         * @param {Number} pos The offset of the child element to scroll to.\n         */\n        this.scrollParentToChildPos = function(pos) {\n            this.sendMessage('scrollToChildPos', pos.toString());\n        };\n\n        /**\n         * Mark Whether the child is embedded or not\n         * executes a callback in case it was passed to the config\n         *\n         * @memberof module:pym.Child\n         * @method _markWhetherEmbedded\n         * @inner\n         *\n         * @param {module:pym.Child~onMarkedEmbeddedStatus} The callback to execute after determining whether embedded or not.\n         */\n        var _markWhetherEmbedded = function(onMarkedEmbeddedStatus) {\n          var htmlElement = document.getElementsByTagName('html')[0],\n              newClassForHtml,\n              originalHtmlClasses = htmlElement.className;\n          try {\n            if(window.self !== window.top) {\n              newClassForHtml = \"embedded\";\n            }else{\n              newClassForHtml = \"not-embedded\";\n            }\n          }catch(e) {\n            newClassForHtml = \"embedded\";\n          }\n          if(originalHtmlClasses.indexOf(newClassForHtml) < 0) {\n            htmlElement.className = originalHtmlClasses ? originalHtmlClasses + ' ' + newClassForHtml : newClassForHtml;\n            if(onMarkedEmbeddedStatus){\n              onMarkedEmbeddedStatus(newClassForHtml);\n            }\n            _raiseCustomEvent(\"marked-embedded\");\n          }\n        };\n\n        /**\n         * @callback module:pym.Child~onMarkedEmbeddedStatus\n         * @param {String} classname \"embedded\" or \"not-embedded\".\n         */\n\n        /**\n         * Unbind child event handlers and timers.\n         *\n         * @memberof module:pym.Child\n         * @method remove\n         * @instance\n         */\n        this.remove = function() {\n            window.removeEventListener('message', this._processMessage);\n            if (this.timerId) {\n                clearInterval(this.timerId);\n            }\n        };\n\n        // Initialize settings with overrides.\n        for (var key in config) {\n            this.settings[key] = config[key];\n        }\n\n        // Identify what ID the parent knows this child as.\n        this.id = _getParameterByName('childId') || config.id;\n        this.messageRegex = new RegExp('^pym' + MESSAGE_DELIMITER + this.id + MESSAGE_DELIMITER + '(\\\\S+)' + MESSAGE_DELIMITER + '(.*)$');\n\n        // Get the initial width from a URL parameter.\n        var width = parseInt(_getParameterByName('initialWidth'));\n\n        // Get the url of the parent frame\n        this.parentUrl = _getParameterByName(this.settings.parenturlparam);\n\n        // Get the title of the parent frame\n        this.parentTitle = _getParameterByName('parentTitle');\n\n        // Bind the required message handlers\n        this.onMessage('width', this._onWidthMessage);\n\n        // Set up a listener to handle any incoming messages.\n        window.addEventListener('message', this._processMessage, false);\n\n        // If there's a callback function, call it.\n        if (this.settings.renderCallback) {\n            this.settings.renderCallback(width);\n        }\n\n        // Send the initial height to the parent.\n        this.sendHeight();\n\n        // If we're configured to poll, create a setInterval to handle that.\n        if (this.settings.polling) {\n            this.timerId = window.setInterval(this.sendHeight, this.settings.polling);\n        }\n\n        _markWhetherEmbedded(config.onMarkedEmbeddedStatus);\n\n        return this;\n    };\n\n    // Initialize elements with pym data attributes\n    // if we are not in server configuration\n    if(typeof document !== \"undefined\") {\n        lib.autoInit(true);\n    }\n\n    return lib;\n});\n\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["factory","define","amd","module","exports","window","pym","call","this","MESSAGE_DELIMITER","lib","_raiseCustomEvent","eventName","event","document","createEvent","initEvent","dispatchEvent","_getParameterByName","name","results","RegExp","replace","exec","location","search","decodeURIComponent","_isSafeMessage","e","settings","xdomain","origin","match","data","_makeMessage","id","messageType","message","join","_getNow","Date","now","getTime","_cleanAutoInitInstances","idx","autoInitInstances","length","instance","el","getElementsByTagName","contentWindow","splice","autoInit","doNotRaiseEvents","elements","querySelectorAll","element","setAttribute","Math","random","toString","substr","src","getAttribute","title","sandbox","allowfullscreen","parenturlparam","parenturlvalue","optionalparams","trackscroll","scrollwait","config","attribute","n","Number","isNaN","console","err","parent","Parent","push","url","key","getElementById","iframe","href","messageRegex","_makeMessageRegex","messageHandlers","_constructIframe","width","offsetWidth","createElement","hash","hashIndex","indexOf","substring","encodeURIComponent","undefined","firstChild","removeChild","appendChild","addEventListener","_onResize","_throttleOnScroll","sendWidth","sendViewportAndIFramePosition","bind","_onScroll","_fire","i","remove","removeEventListener","_processMessage","_onHeightMessage","height","parseInt","_onNavigateToMessage","_isSafeUrl","_onScrollToChildPosMessage","totalOffset","getBoundingClientRect","top","pageYOffset","scrollTo","onMessage","callback","sendMessage","postMessage","iframeRect","payload","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","left","bottom","right","func","wait","options","context","args","result","timeout","previous","later","leading","apply","remaining","arguments","clearTimeout","trailing","setTimeout","_throttle","Child","parentWidth","parentTitle","parentUrl","renderCallback","polling","timerId","_onWidthMessage","sendHeight","offsetHeight","getParentPositionInfo","scrollParentTo","navigateParentTo","scrollParentToChildEl","topPos","scrollParentToChildPos","pos","clearInterval","setInterval","onMarkedEmbeddedStatus","newClassForHtml","htmlElement","originalHtmlClasses","className","self","_markWhetherEmbedded","interopDefault","a","__esModule","default","defineInteropFlag","Object","defineProperty","value","exportAll","source","dest","keys","forEach","hasOwnProperty","enumerable","get","export","destName"],"version":3,"file":"index.ac0d7cd6.js.map"}