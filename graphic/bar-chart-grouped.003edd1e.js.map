{"mappings":"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","sources":["node_modules/@michigandaily/bore/src/bore.js","node_modules/@michigandaily/bore/src/util/color.js","node_modules/@michigandaily/bore/src/util/wrap.js","node_modules/@michigandaily/bore/src/graphic/AreaChart.js","node_modules/@swc/helpers/src/_class_private_field_get.mjs","node_modules/@swc/helpers/src/_class_extract_field_descriptor.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_get.mjs","node_modules/@swc/helpers/src/_class_private_field_init.mjs","node_modules/@swc/helpers/src/_check_private_redeclaration.mjs","node_modules/@swc/helpers/src/_class_private_field_set.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_set.mjs","node_modules/@michigandaily/bore/src/graphic/Visual.js","node_modules/@swc/helpers/src/_object_spread.mjs","node_modules/@swc/helpers/src/_define_property.mjs","node_modules/@michigandaily/bore/src/util/axis.js","node_modules/@michigandaily/bore/src/graphic/BarChart.js","node_modules/@michigandaily/bore/src/graphic/ColumnChart.js","node_modules/@michigandaily/bore/src/graphic/GroupedBarChart.js","node_modules/@michigandaily/bore/src/graphic/GroupedColumnChart.js","node_modules/@michigandaily/bore/src/graphic/StackedBarChart.js","node_modules/@michigandaily/bore/src/graphic/StackedColumnChart.js","node_modules/@michigandaily/bore/src/graphic/LineChart.js","node_modules/@michigandaily/bore/src/graphic/ScatterPlot.js","node_modules/@michigandaily/bore/src/graphic/SankeyDiagram.js","node_modules/d3-sankey/src/index.js","node_modules/d3-sankey/src/sankey.js","node_modules/d3-sankey/node_modules/d3-array/src/index.js","node_modules/d3-sankey/node_modules/d3-array/src/max.js","node_modules/d3-sankey/node_modules/d3-array/src/min.js","node_modules/d3-sankey/node_modules/d3-array/src/sum.js","node_modules/d3-sankey/src/align.js","node_modules/d3-sankey/src/constant.js","node_modules/d3-sankey/src/sankeyLinkHorizontal.js","node_modules/d3-sankey/node_modules/d3-shape/src/index.js","node_modules/d3-sankey/node_modules/d3-shape/src/pointRadial.js","node_modules/d3-sankey/node_modules/d3-shape/src/link/index.js","node_modules/d3-sankey/node_modules/d3-path/src/index.js","node_modules/d3-sankey/node_modules/d3-path/src/path.js","node_modules/d3-sankey/node_modules/d3-shape/src/array.js","node_modules/d3-sankey/node_modules/d3-shape/src/constant.js","node_modules/d3-sankey/node_modules/d3-shape/src/point.js"],"sourcesContent":["export * from \"./util/color\";\nexport { default as wrap } from \"./util/wrap\";\nexport { default as AreaChart } from \"./graphic/AreaChart\";\nexport { default as BarChart } from \"./graphic/BarChart\";\nexport { default as ColumnChart } from \"./graphic/ColumnChart\";\nexport { default as GroupedBarChart } from \"./graphic/GroupedBarChart\";\nexport { default as GroupedColumnChart } from \"./graphic/GroupedColumnChart\";\nexport { default as StackedBarChart } from \"./graphic/StackedBarChart\";\nexport { default as StackedColumnChart } from \"./graphic/StackedColumnChart\";\nexport { default as LineChart } from \"./graphic/LineChart\";\nexport { default as ScatterPlot } from \"./graphic/ScatterPlot\";\nexport { default as SankeyDiagram } from \"./graphic/SankeyDiagram\";\n\nconst build = (chart) => chart.draw.bind(chart);\n\nexport { build };\n","export const schemeMain = [\n  \"#003F5C\",\n  \"#2F4B7C\",\n  \"#665191\",\n  \"#A05195\",\n  \"#D45087\",\n  \"#F95D6A\",\n  \"#FF7C43\",\n  \"#FFA600\",\n  \"#FFD600\",\n];\nexport const schemePolitical = [\n  \"#212EC2\",\n  \"#4C7C9B\",\n  \"#EAE3E7\",\n  \"#EC8AA1\",\n  \"#D61A36\",\n];\n","import { select } from \"d3\";\n\nconst length = (el) => el.node().getComputedTextLength();\n\n// This function is adapted from a Mike Bostock implementation of text wrapping\n// https://bl.ocks.org/mbostock/7555321\nconst wrap = (selection, w) => {\n  let maxTextL = 0;\n  let maxSpanL = 0;\n  let l;\n\n  const lencomp = (text, context) => {\n    l = length(text);\n    return Math.max(l, context);\n  };\n\n  selection.each(function () {\n    const text = select(this);\n\n    // get the maximum possible length of a label\n    maxTextL = lencomp(text, maxTextL);\n\n    const words = text.text().split(/\\s+/).reverse();\n    if (words.length === 1) return;\n    let word;\n    let line = [];\n    const x = text.attr(\"x\");\n    const y = text.attr(\"y\");\n    let tspan = text.text(null).append(\"tspan\").attr(\"x\", x).attr(\"y\", y);\n\n    while ((word = words.pop())) {\n      line.push(word);\n      tspan.text(line.join(\" \"));\n\n      l = length(tspan);\n      if (l > w) {\n        tspan.attr(\"y\", text.attr(\"y\") - 5);\n        line.pop();\n        tspan.text(line.join(\" \"));\n\n        // get the maximum length of a line\n        maxSpanL = lencomp(tspan, maxSpanL);\n\n        line = [word];\n        tspan = text\n          .append(\"tspan\")\n          .attr(\"x\", x)\n          .attr(\"y\", y)\n          .attr(\"dy\", \"1em\")\n          .text(word);\n\n        maxSpanL = lencomp(tspan, maxSpanL);\n      }\n    }\n  });\n\n  return maxSpanL && maxSpanL < maxTextL ? maxSpanL : maxTextL;\n};\n\nexport default wrap;\n","import {\n  local,\n  extent,\n  scaleLinear,\n  scaleTime,\n  curveLinear,\n  select,\n  max,\n  stack,\n  sum,\n  area,\n} from \"d3\";\nimport Visual from \"./Visual\";\nimport { xAxisBottom, yAxisLeft } from \"../util/axis\";\nexport default class AreaChart extends Visual {\n  #curve;\n\n  constructor() {\n    super();\n    this.height(200);\n    this.margin({ left: 30, top: 20, right: 20, bottom: 20 });\n    this.color(\"steelblue\");\n    // this.label();\n    this.resize(true);\n    this.redraw(false);\n    // this.wrappx();\n    this.xAxis(xAxisBottom);\n    this.yAxis(yAxisLeft);\n\n    this.curve(curveLinear);\n    this.x = null;\n    this.y = local();\n  }\n\n  curve(c) {\n    return arguments.length ? ((this.#curve = c), this) : this.#curve;\n  }\n\n  defaultXScale(data) {\n    return scaleTime().domain(extent(data.keys()));\n  }\n\n  defaultYScale(data) {\n    const maximum = this.multiple\n      ? max(Array.from(data.values()).map((d) => sum(d.values())))\n      : max(data.values());\n    return scaleLinear().domain([0, maximum]).nice();\n  }\n\n  draw(selections) {\n    selections.each((data, i, selection) => {\n      this.multiple = data.values().next().value instanceof Map;\n      if (this.multiple) {\n        this.keys = data.values().next().value.keys();\n      }\n      const { left, top, right, bottom } = this.margin();\n      const node = selection[i];\n\n      this.x = this.xScale() ?? this.defaultXScale(data);\n      this.y\n        .set(node, this.yScale() ?? this.defaultYScale(data))\n        .range([this.height() - bottom, top]);\n\n      const svg = select(node)\n        .attr(\"height\", this.height())\n        .attr(\"class\", \"area-chart\");\n      this.svg = svg;\n\n      const yAxisGroup = this.appendOnce(\"g\", \"y-axis\");\n      yAxisGroup.attr(\"transform\", `translate(${left}, 0)`);\n\n      const xAxisGroup = this.appendOnce(\"g\", \"x-axis\");\n      xAxisGroup.attr(\"transform\", `translate(0, ${this.height() - bottom})`);\n\n      if (this.multiple) {\n        this.series = stack()\n          .keys(this.keys)\n          .value((d, key) => d.get(key))(data.values());\n      }\n\n      const scale = this.y.get(node);\n      const min = scale.domain()[0];\n      const areaGenerator = area()\n        .y1((d) => scale(d[1]))\n        .y0((d) => scale(this.multiple ? d[0] : min))\n        .curve(this.curve());\n\n      let path;\n      if (this.multiple) {\n        path = svg\n          .selectAll(\".area-path\")\n          .data(this.series)\n          .join(\"path\")\n          .attr(\"class\", \"area-path\");\n      } else {\n        path = this.appendOnce(\"path\", \"area-path\").datum(data);\n      }\n\n      const render = () => {\n        const w = this.getResponsiveWidth();\n        svg.attr(\"width\", w);\n\n        this.x.range([left, w - right]);\n        areaGenerator.x((d, i) =>\n          this.x(this.multiple ? Array.from(data.keys())[i] : d[0])\n        );\n        xAxisGroup.call(this.xAxis().bind(this)(this.x));\n        yAxisGroup.call(this.yAxis().bind(this)(this.y.get(node)));\n\n        this.getSelectionWithRedrawContext(path)\n          .attr(\"d\", areaGenerator)\n          .attr(\"fill\", this.color());\n      };\n\n      render();\n      select(window).on(`resize.${i}`, render);\n    });\n  }\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get.mjs';\n\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\n","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration.mjs\";\n\nexport default function _classPrivateFieldInit(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorSet from './_class_apply_descriptor_set.mjs';\n\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      // This should only throw in strict mode, but class bodies are\n      // always strict and private fields can only be used inside\n      // class bodies.\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\n","import \"../css/visual.scss\";\n\nexport default class Visual {\n  #width;\n  #height;\n  #margin;\n  #xScale;\n  #xAxis;\n  #yScale;\n  #yAxis;\n  #color;\n  #label;\n  #resize;\n  #redraw;\n  #wrappx;\n\n  width(w) {\n    return arguments.length ? ((this.#width = w), this) : this.#width;\n  }\n\n  height(h) {\n    return arguments.length ? ((this.#height = h), this) : this.#height;\n  }\n\n  margin(m) {\n    return arguments.length\n      ? ((this.#margin = { ...this.#margin, ...m }), this)\n      : this.#margin;\n  }\n\n  xScale(s) {\n    return arguments.length ? ((this.#xScale = s), this) : this.#xScale;\n  }\n\n  xAxis(a) {\n    return arguments.length ? ((this.#xAxis = a), this) : this.#xAxis;\n  }\n\n  yScale(s) {\n    return arguments.length ? ((this.#yScale = s), this) : this.#yScale;\n  }\n\n  yAxis(a) {\n    return arguments.length ? ((this.#yAxis = a), this) : this.#yAxis;\n  }\n\n  color(c) {\n    return arguments.length ? ((this.#color = c), this) : this.#color;\n  }\n\n  label(l) {\n    return arguments.length ? ((this.#label = l), this) : this.#label;\n  }\n\n  resize(r) {\n    return arguments.length ? ((this.#resize = r), this) : this.#resize;\n  }\n\n  redraw(r) {\n    return arguments.length ? ((this.#redraw = r), this) : this.#redraw;\n  }\n\n  wrappx(px) {\n    return arguments.length ? ((this.#wrappx = px), this) : this.#wrappx;\n  }\n\n  appendOnce(element, classSelector) {\n    return this.redraw()\n      ? this.svg.select(`.${classSelector}`)\n      : this.svg.append(element).attr(\"class\", classSelector);\n  }\n\n  getResponsiveWidth() {\n    // If the graphic should resize, return the parent container's width.\n    // If the graphic should not resize and the desired width is greater\n    // than the parent container's width, return the parent container's width.\n    // Otherwise, return the desired width.\n    const node = this.svg.node();\n    const cw = node.parentNode.clientWidth;\n    return this.resize() ? cw : cw < this.width() ? cw : this.width();\n  }\n\n  getSelectionWithRedrawContext(selection) {\n    return this.redraw() ? selection.transition().duration(1000) : selection;\n  }\n}\n","import defineProperty from './_define_property.mjs';\n\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","import { axisTop, axisLeft, axisBottom } from \"d3\";\n\nexport const xAxisTop = function (scale) {\n  return (g) => {\n    const { top, bottom } = this.margin();\n    const axis = axisTop(scale).ticks(this.getResponsiveWidth() / 80);\n    const selection = this.getSelectionWithRedrawContext(g);\n    selection.call(axis);\n    selection.selectAll(\".tick line\").attr(\"y2\", this.height() - top - bottom);\n  };\n};\n\nexport const xAxisBottom = function (scale) {\n  return (g) => {\n    const axis = axisBottom(scale)\n      .ticks(this.getResponsiveWidth() / 80)\n      .tickSize(0);\n    const selection = this.getSelectionWithRedrawContext(g);\n    selection.call(axis);\n  };\n};\n\nexport const yAxisLeft = function (scale) {\n  return (g) => {\n    const selection = this.getSelectionWithRedrawContext(g);\n    selection.call(axisLeft(scale));\n\n    const { left, right } = this.margin();\n    const w = this.getResponsiveWidth();\n    selection.selectAll(\".tick line\").attr(\"x2\", w - left - right);\n  };\n};\n","import { local, select, scaleLinear, scaleBand, max, axisLeft } from \"d3\";\nimport Visual from \"./Visual\";\nimport wrap from \"../util/wrap\";\nimport { xAxisTop } from \"../util/axis\";\nimport \"../css/bar-chart.scss\";\nexport default class BarChart extends Visual {\n  constructor() {\n    super();\n    this.height(150);\n    this.margin({ top: 20, right: 20, bottom: 20, left: 20 });\n    this.color(\"steelblue\");\n    this.label((d) => d[1]);\n    this.resize(true);\n    this.redraw(false);\n    this.wrappx(50);\n    this.xAxis(xAxisTop);\n    this.yAxis(function (scale) {\n      return (g) => {\n        const selection = this.getSelectionWithRedrawContext(g);\n        selection.call(axisLeft(scale).tickSize(0));\n      };\n    });\n\n    this.x = local();\n    this.y = null;\n  }\n\n  bar(rect) {\n    return rect\n      .attr(\"class\", \"bar\")\n      .attr(\"y\", (d) => this.y(d[0]))\n      .attr(\"height\", this.y.bandwidth())\n      .attr(\"fill\", this.color());\n  }\n\n  barLabel(text) {\n    return text\n      .attr(\"class\", \"label\")\n      .attr(\"dx\", \"0.25em\")\n      .attr(\"y\", (d) => this.y(d[0]) + this.y.bandwidth() / 2)\n      .text(this.label());\n  }\n\n  defaultXScale(data) {\n    return scaleLinear()\n      .domain([0, max(data.values())])\n      .nice();\n  }\n\n  defaultYScale(data) {\n    return scaleBand().domain(data.keys()).padding(0.25);\n  }\n\n  draw(selections) {\n    selections.each((data, i, selection) => {\n      const { top, right, bottom } = this.margin();\n      let { left } = this.margin();\n\n      const node = selection[i];\n\n      this.x.set(node, this.xScale() ?? this.defaultXScale(data));\n\n      this.y = this.yScale() ?? this.defaultYScale(data);\n      this.y.range([top, this.height() - bottom]);\n\n      const svg = select(node)\n        .attr(\"height\", this.height())\n        .attr(\"class\", \"bar-chart\");\n      this.svg = svg;\n\n      this.appendOnce(\"g\", \"y-axis\")\n        .call(this.yAxis().bind(this)(this.y))\n        .call((g) => {\n          const text = g.selectAll(\".tick text\");\n          left += wrap(text, this.wrappx());\n        })\n        .attr(\"transform\", `translate(${left}, 0)`);\n\n      const xAxisGroup = this.appendOnce(\"g\", \"x-axis\").attr(\n        \"transform\",\n        `translate(0, ${top})`\n      );\n\n      const bars = svg\n        .selectAll(\".bar\")\n        .data(data)\n        .join(\"rect\")\n        .call(this.bar.bind(this));\n\n      const labels = svg\n        .selectAll(\".label\")\n        .data(data)\n        .join(\"text\")\n        .call(this.barLabel.bind(this));\n\n      const render = () => {\n        const w = this.getResponsiveWidth();\n        svg.attr(\"width\", w);\n\n        const lx = this.x.get(node).range([left, w - right]);\n        xAxisGroup.call(this.xAxis().bind(this)(lx));\n\n        const min = lx.domain()[0];\n\n        this.getSelectionWithRedrawContext(bars)\n          .attr(\"x\", lx(min))\n          .attr(\"width\", (d) => lx(d[1]) - lx(min));\n\n        this.getSelectionWithRedrawContext(labels).attr(\"x\", (d) => lx(d[1]));\n      };\n\n      render();\n      select(window).on(`resize.${i}`, render);\n    });\n\n    return this;\n  }\n}\n","import { local, scaleBand, scaleLinear, max, select } from \"d3\";\nimport { xAxisBottom, yAxisLeft } from \"../util/axis\";\nimport Visual from \"./Visual\";\nimport \"../css/column-chart.scss\";\nexport default class ColumnChart extends Visual {\n  constructor() {\n    super();\n    this.height(400);\n    this.margin({ top: 20, right: 20, bottom: 40, left: 30 });\n    this.color(\"steelblue\");\n    this.label((d) => d[1]);\n    this.resize(true);\n    this.redraw(false);\n    this.wrappx(50);\n    this.xAxis(xAxisBottom);\n    this.yAxis(yAxisLeft);\n\n    this.x = null;\n    this.y = local();\n  }\n\n  bar(rect) {\n    const scale = this.y.get(this.svg.node());\n    const min = scale.domain()[0];\n    const selection = this.getSelectionWithRedrawContext(rect);\n    return selection\n      .attr(\"class\", \"bar\")\n      .attr(\"y\", (d) => scale(d[1]))\n      .attr(\"height\", (d) => scale(min) - scale(d[1]))\n      .attr(\"fill\", this.color());\n  }\n\n  barLabel(text) {\n    const scale = this.y.get(this.svg.node());\n    const selection = this.getSelectionWithRedrawContext(text);\n    return selection\n      .attr(\"class\", \"label\")\n      .attr(\"y\", (d) => scale(d[1]))\n      .attr(\"dy\", \"-0.25em\")\n      .text(this.label());\n  }\n\n  defaultXScale(data) {\n    return scaleBand().domain(data.keys()).padding(0.25);\n  }\n\n  defaultYScale(data) {\n    return scaleLinear()\n      .domain([0, max(data.values())])\n      .nice();\n  }\n\n  draw(selections) {\n    selections.each((data, i, selection) => {\n      const { top, right, bottom, left } = this.margin();\n\n      const node = selection[i];\n\n      this.x = this.xScale() ?? this.defaultXScale(data);\n      this.y\n        .set(node, this.yScale() ?? this.defaultYScale(data))\n        .range([this.height() - bottom, top]);\n\n      const svg = select(node)\n        .attr(\"height\", this.height())\n        .attr(\"class\", \"column-chart\");\n      this.svg = svg;\n\n      const yAxisGroup = this.appendOnce(\"g\", \"y-axis\").attr(\n        \"transform\",\n        `translate(${left}, 0)`\n      );\n\n      const xAxisGroup = this.appendOnce(\"g\", \"x-axis\").attr(\n        \"transform\",\n        `translate(0, ${this.height() - bottom})`\n      );\n\n      const bars = svg\n        .selectAll(\".bar\")\n        .data(data)\n        .join(\"rect\")\n        .call(this.bar.bind(this));\n\n      const labels = svg\n        .selectAll(\".label\")\n        .data(data)\n        .join(\"text\")\n        .call(this.barLabel.bind(this));\n\n      const render = () => {\n        const w = this.getResponsiveWidth();\n        svg.attr(\"width\", w);\n\n        this.x.range([left, w - right]);\n        xAxisGroup.call(this.xAxis().bind(this)(this.x));\n        yAxisGroup.call(this.yAxis().bind(this)(this.y.get(node)));\n\n        bars.attr(\"x\", (d) => this.x(d[0])).attr(\"width\", this.x.bandwidth());\n        labels.attr(\"x\", (d) => this.x(d[0]) + this.x.bandwidth() / 2);\n      };\n\n      render();\n      select(window).on(`resize.${i}`, render);\n    });\n  }\n}\n","import { local, scaleLinear, scaleBand, select, max, axisLeft } from \"d3\";\nimport Visual from \"./Visual\";\nimport wrap from \"../util/wrap\";\nimport { xAxisTop } from \"../util/axis\";\nimport \"../css/grouped-bar-chart.scss\";\n\nexport default class GroupedBarChart extends Visual {\n  constructor() {\n    super();\n    this.height(200);\n    this.margin({ top: 20, right: 20, bottom: 20, left: 20 });\n    this.color(\"steelblue\");\n    this.label((d) => d[1]);\n    this.resize(true);\n    this.redraw(false);\n    this.wrappx(50);\n    this.xAxis(xAxisTop);\n    this.yAxis(function (scale) {\n      return (g) => {\n        const selection = this.getSelectionWithRedrawContext(g);\n        selection.call(axisLeft(scale).tickSize(0));\n      };\n    });\n\n    this.x = local();\n    this.y0 = null;\n    this.y1 = null;\n  }\n\n  bar(rect) {\n    return rect\n      .attr(\"class\", \"bar\")\n      .attr(\"y\", (d) => this.y1(d[0]))\n      .attr(\"height\", this.y1.bandwidth())\n      .attr(\"fill\", this.color());\n  }\n\n  barLabel(text) {\n    return text\n      .attr(\"class\", \"label\")\n      .attr(\"dx\", \"0.25em\")\n      .attr(\"y\", (d) => this.y1(d[0]) + this.y1.bandwidth() / 2)\n      .text(this.label());\n  }\n\n  defaultXScale(data) {\n    return scaleLinear()\n      .domain([0, max(data, (d) => max(Object.entries(d[1]), (v) => +v[1]))])\n      .nice();\n  }\n\n  draw(selections) {\n    selections.each((data, i, selection) => {\n      const { top, right, bottom } = this.margin();\n      let { left } = this.margin();\n\n      const node = selection[i];\n      const keys = Object.keys(data.values().next().value);\n\n      this.x.set(node, this.xScale() ?? this.defaultXScale(data));\n\n      this.y0 = scaleBand()\n        .domain(data.keys())\n        .range([top, this.height() - bottom])\n        .padding(0.3);\n\n      this.y1 = scaleBand().domain(keys).range([0, this.y0.bandwidth()]);\n\n      const svg = select(node)\n        .attr(\"height\", this.height())\n        .attr(\"class\", \"grouped-bar-chart\");\n      this.svg = svg;\n\n      this.appendOnce(\"g\", \"y-axis\")\n        .call(this.yAxis().bind(this)(this.y0))\n        .call((g) => {\n          const text = g.selectAll(\".tick text\");\n          left += wrap(text, this.wrappx());\n        })\n        .attr(\"transform\", `translate(${left}, 0)`);\n\n      const xAxisGroup = this.appendOnce(\"g\", \"x-axis\").attr(\n        \"transform\",\n        `translate(0, ${top})`\n      );\n\n      const groups = svg\n        .selectAll(\".bar-group\")\n        .data(data)\n        .join(\"g\")\n        .attr(\"class\", \"bar-group\")\n        .attr(\"transform\", (d) => `translate(0, ${this.y0(d[0])})`);\n\n      const bars = groups\n        .selectAll(\".bar\")\n        .data((d) => Object.entries(d[1]))\n        .join(\"rect\")\n        .call(this.bar.bind(this));\n\n      const labels = groups\n        .selectAll(\".label\")\n        .data((d) => Object.entries(d[1]))\n        .join(\"text\")\n        .call(this.barLabel.bind(this));\n\n      const render = () => {\n        const w = this.getResponsiveWidth();\n        svg.attr(\"width\", w);\n\n        const lx = this.x.get(node).range([left, w - right]);\n        xAxisGroup.call(this.xAxis().bind(this)(lx));\n\n        const min = lx.domain()[0];\n\n        this.getSelectionWithRedrawContext(bars)\n          .attr(\"x\", lx(min))\n          .attr(\"width\", (d) => lx(d[1]) - lx(min));\n\n        this.getSelectionWithRedrawContext(labels).attr(\"x\", (d) => lx(d[1]));\n      };\n\n      render();\n      select(window).on(`resize.${i}`, render);\n    });\n\n    return this;\n  }\n}\n","import { local, max, scaleLinear, select, scaleBand } from \"d3\";\nimport Visual from \"./Visual\";\nimport { xAxisBottom, yAxisLeft } from \"../util/axis\";\nimport \"../css/grouped-column-chart.scss\";\nexport default class GroupedColumnChart extends Visual {\n  constructor() {\n    super();\n    this.height(400);\n    this.margin({ top: 20, right: 20, bottom: 40, left: 30 });\n    this.color(\"steelblue\");\n    this.label((d) => d[1]);\n    this.resize(true);\n    this.redraw(false);\n    this.wrappx(50);\n    this.xAxis(xAxisBottom);\n    this.yAxis(yAxisLeft);\n\n    this.y = local();\n    this.x0 = null;\n    this.x1 = null;\n  }\n\n  bar(rect) {\n    const scale = this.y.get(this.svg.node());\n    const min = scale.domain()[0];\n    const selection = this.getSelectionWithRedrawContext(rect);\n    return selection\n      .attr(\"class\", \"bar\")\n      .attr(\"y\", (d) => scale(d[1]))\n      .attr(\"height\", (d) => scale(min) - scale(d[1]))\n      .attr(\"fill\", this.color());\n  }\n\n  barLabel(text) {\n    const scale = this.y.get(this.svg.node());\n    const selection = this.getSelectionWithRedrawContext(text);\n    return selection\n      .attr(\"class\", \"label\")\n      .attr(\"y\", (d) => scale(d[1]))\n      .attr(\"dy\", \"-0.25em\")\n      .text(this.label());\n  }\n\n  defaultYScale(data) {\n    return scaleLinear()\n      .domain([0, max(data, (d) => max(Object.entries(d[1]), (v) => +v[1]))])\n      .nice();\n  }\n\n  draw(selections) {\n    selections.each((data, i, selection) => {\n      const { top, right, bottom, left } = this.margin();\n\n      const node = selection[i];\n      const keys = Object.keys(data.values().next().value);\n\n      this.x0 = scaleBand().domain(data.keys()).padding(0.3);\n      this.x1 = scaleBand().domain(keys);\n\n      this.y\n        .set(node, this.yScale() ?? this.defaultYScale(data))\n        .range([this.height() - bottom, top]);\n\n      const svg = select(node)\n        .attr(\"height\", this.height())\n        .attr(\"class\", \"grouped-column-chart\");\n      this.svg = svg;\n\n      const yAxisGroup = this.appendOnce(\"g\", \"y-axis\").attr(\n        \"transform\",\n        `translate(${left}, 0)`\n      );\n\n      const xAxisGroup = this.appendOnce(\"g\", \"x-axis\").attr(\n        \"transform\",\n        `translate(0, ${this.height() - bottom})`\n      );\n\n      const groups = svg\n        .selectAll(\".bar-group\")\n        .data(data)\n        .join(\"g\")\n        .attr(\"class\", \"bar-group\");\n\n      const bars = groups\n        .selectAll(\".bar\")\n        .data((d) => Object.entries(d[1]))\n        .join(\"rect\")\n        .call(this.bar.bind(this));\n\n      const labels = groups\n        .selectAll(\".label\")\n        .data((d) => Object.entries(d[1]))\n        .join(\"text\")\n        .call(this.barLabel.bind(this));\n\n      const render = () => {\n        const w = this.getResponsiveWidth();\n        svg.attr(\"width\", w);\n\n        this.x0.range([left, w - right]);\n        this.x1.range([0, this.x0.bandwidth()]);\n\n        xAxisGroup.call(this.xAxis().bind(this)(this.x0));\n        yAxisGroup.call(this.yAxis().bind(this)(this.y.get(node)));\n\n        groups.attr(\"transform\", (d) => `translate(${this.x0(d[0])}, 0)`);\n        bars.attr(\"x\", (d) => this.x1(d[0])).attr(\"width\", this.x1.bandwidth());\n        labels.attr(\"x\", (d) => this.x1(d[0]) + this.x1.bandwidth() / 2);\n      };\n\n      render();\n      select(window).on(`resize.${i}`, render);\n    });\n  }\n}\n","import {\n  local,\n  max,\n  scaleBand,\n  scaleLinear,\n  sum,\n  select,\n  stack,\n  axisLeft,\n} from \"d3\";\nimport wrap from \"../util/wrap\";\nimport { xAxisTop } from \"../util/axis\";\nimport Visual from \"./Visual\";\n\nexport default class StackedBarChart extends Visual {\n  constructor() {\n    super();\n    this.height(200);\n    this.margin({ top: 20, right: 20, bottom: 20, left: 20 });\n    this.color(\"steelblue\");\n    // this.label();\n    this.resize(true);\n    this.redraw(false);\n    this.wrappx(50);\n    this.xAxis(xAxisTop);\n    this.yAxis(function (scale) {\n      return (g) => {\n        const selection = this.getSelectionWithRedrawContext(g);\n        selection.call(axisLeft(scale).tickSize(0));\n      };\n    });\n\n    this.x = local();\n    this.y = null;\n  }\n\n  defaultXScale(data) {\n    const maximum = max(data.values(), (d) => sum(this.keys.map((k) => d[k])));\n    return scaleLinear().domain([0, maximum]);\n  }\n\n  defaultYScale(data) {\n    return scaleBand().domain(data.keys()).padding(0.3);\n  }\n\n  draw(selections) {\n    selections.each((data, i, selection) => {\n      const { top, right, bottom } = this.margin();\n      let { left } = this.margin();\n      this.keys = Object.keys(data.values().next().value);\n      const node = selection[i];\n\n      this.x.set(node, this.xScale() ?? this.defaultXScale(data));\n\n      this.y = this.yScale() ?? this.defaultYScale(data);\n      this.y.range([top, this.height() - bottom]);\n\n      const svg = select(node)\n        .attr(\"height\", this.height())\n        .attr(\"class\", \"stacked-bar-chart\");\n      this.svg = svg;\n\n      this.appendOnce(\"g\", \"y-axis\")\n        .call(this.yAxis().bind(this)(this.y))\n        .call((g) => {\n          const text = g.selectAll(\".tick text\");\n          left += wrap(text, this.wrappx());\n        })\n        .attr(\"transform\", `translate(${left}, 0)`);\n\n      const xAxisGroup = this.appendOnce(\"g\", \"x-axis\").attr(\n        \"transform\",\n        `translate(0, ${top})`\n      );\n\n      const series = stack().keys(this.keys)(data.values());\n\n      const bars = svg\n        .selectAll(\".bar-group\")\n        .data(series)\n        .join(\"g\")\n        .attr(\"fill\", this.color())\n        .attr(\"class\", \"bar-group\")\n        .selectAll(\".bar\")\n        .data((d) => d)\n        .join(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"y\", (_, i) => this.y(Array.from(data.keys())[i]))\n        .attr(\"height\", this.y.bandwidth());\n\n      const render = () => {\n        const w = this.getResponsiveWidth();\n\n        svg.attr(\"width\", w);\n        const lx = this.x.get(node).range([left, w - right]);\n        xAxisGroup.call(this.xAxis().bind(this)(lx));\n\n        this.getSelectionWithRedrawContext(bars)\n          .attr(\"width\", ([x0, x1]) => lx(x1) - lx(x0))\n          .attr(\"x\", ([x0]) => lx(x0));\n      };\n\n      render();\n      select(window).on(`resize.${i}`, render);\n    });\n  }\n}\n","import { select, local, scaleLinear, max, sum, scaleBand, stack } from \"d3\";\nimport { xAxisBottom, yAxisLeft } from \"../util/axis\";\nimport Visual from \"./Visual\";\n\nexport default class StackedColumnChart extends Visual {\n  constructor() {\n    super();\n    this.height(300);\n    this.margin({ top: 20, right: 20, left: 30, bottom: 20 });\n    this.color(() => \"steelblue\");\n    this.label((d) => d[1]);\n    this.resize(true);\n    this.redraw(false);\n    this.wrappx(50);\n    this.yAxis(yAxisLeft);\n    this.xAxis(xAxisBottom);\n\n    this.y = local();\n    this.x = null;\n  }\n\n  defaultYScale(data) {\n    const maximum = max(data.values(), (d) => sum(this.keys.map((k) => d[k])));\n    return scaleLinear().domain([0, maximum]);\n  }\n\n  defaultXScale(data) {\n    return scaleBand().domain(data.keys()).padding(0.3);\n  }\n\n  bar(rect) {\n    const scale = this.y.get(this.svg.node());\n    const selection = this.getSelectionWithRedrawContext(rect);\n    return selection\n      .attr(\"class\", \"bar\")\n      .attr(\"y\", (y) => scale(y[1]))\n      .attr(\"height\", ([y0, y1]) => scale(y0) - scale(y1));\n  }\n\n  draw(selections) {\n    selections.each((data, i, selection) => {\n      this.keys = Object.keys(data.values().next().value);\n      const { top, left, bottom, right } = this.margin();\n      const node = selection[i];\n\n      const svg = select(node)\n        .attr(\"height\", this.height())\n        .attr(\"class\", \"stacked-column-chart\");\n      this.svg = svg;\n\n      this.x = this.xScale() ?? this.defaultXScale(data);\n\n      this.y\n        .set(node, this.yScale() ?? this.defaultYScale(data))\n        .range([this.height() - bottom, top]);\n\n      const yAxisGroup = this.appendOnce(\"g\", \"y-axis\").attr(\n        \"transform\",\n        `translate(${left}, 0)`\n      );\n\n      const xAxisGroup = this.appendOnce(\"g\", \"x-axis\").attr(\n        \"transform\",\n        `translate(0, ${this.height() - bottom})`\n      );\n\n      const series = stack().keys(this.keys)(data.values());\n\n      const rect = svg\n        .selectAll(\".bar-group\")\n        .data(series)\n        .join(\"g\")\n        .attr(\"class\", \"bar-group\")\n        .attr(\"fill\", this.color())\n        .selectAll(\".bar\")\n        .data((d) => d)\n        .join(\"rect\")\n        .call(this.bar.bind(this));\n\n      const render = () => {\n        const w = this.getResponsiveWidth();\n\n        svg.attr(\"width\", w);\n        this.x.range([left, w - right]);\n        xAxisGroup.call(this.xAxis().bind(this)(this.x));\n        yAxisGroup.call(this.yAxis().bind(this)(this.y.get(node)));\n\n        rect\n          .attr(\"width\", this.x.bandwidth())\n          .attr(\"x\", (_, i) => this.x(Array.from(data.keys())[i]));\n      };\n\n      render();\n      select(window).on(`resize.${i}`, render);\n    });\n  }\n}\n","import {\n  local,\n  select,\n  scaleLinear,\n  scaleTime,\n  max,\n  extent,\n  line,\n  curveLinear,\n} from \"d3\";\nimport Visual from \"./Visual\";\nimport { xAxisBottom, yAxisLeft } from \"../util/axis\";\nimport \"../css/line-chart.scss\";\n\nexport default class LineChart extends Visual {\n  #curve;\n\n  constructor() {\n    super();\n    this.height(150);\n    this.margin({ top: 20, right: 20, bottom: 20, left: 30 });\n    this.color(\"steelblue\");\n    // this.label();\n    this.resize(true);\n    this.redraw(false);\n    // this.wrappx();\n    this.xAxis(xAxisBottom);\n    this.yAxis(yAxisLeft);\n    this.curve(curveLinear);\n\n    this.x = null;\n    this.y = local();\n  }\n\n  curve(c) {\n    return arguments.length ? ((this.#curve = c), this) : this.#curve;\n  }\n\n  defaultXScale(data) {\n    const domain = this.multiple\n      ? extent(\n          Array.from(data.values())\n            .map((d) => extent(d.keys()))\n            .flat()\n        )\n      : extent(data.keys());\n    return scaleTime().domain(domain);\n  }\n\n  defaultYScale(data) {\n    const maximum = this.multiple\n      ? max(Array.from(data.values()).map((d) => max(d.values())))\n      : max(data.values());\n    return scaleLinear().domain([0, maximum]).nice();\n  }\n\n  draw(selections) {\n    selections.each((data, i, selection) => {\n      this.multiple = data.values().next().value instanceof Map;\n      const { top, right, bottom, left } = this.margin();\n\n      const node = selection[i];\n\n      this.x = this.xScale() ?? this.defaultXScale(data);\n      this.y\n        .set(node, this.yScale() ?? this.defaultYScale(data))\n        .range([this.height() - bottom, top]);\n\n      const svg = select(node)\n        .attr(\"height\", this.height())\n        .attr(\"class\", \"line-chart\");\n      this.svg = svg;\n\n      const yAxisGroup = this.appendOnce(\"g\", \"y-axis\").attr(\n        \"transform\",\n        `translate(${left}, 0)`\n      );\n\n      const xAxisGroup = this.appendOnce(\"g\", \"x-axis\");\n      xAxisGroup.attr(\"transform\", `translate(0, ${this.height() - bottom})`);\n\n      let path;\n      if (this.multiple) {\n        path = svg\n          .selectAll(\".line-path\")\n          .data(data)\n          .join(\"path\")\n          .attr(\n            \"class\",\n            (d) => `line-path ${this.multiple ? d[0].toLowerCase() : \"\"}`\n          );\n      } else {\n        path = this.appendOnce(\"path\", \"line-path\").datum(data);\n      }\n\n      const lineGenerator = line()\n        .y((v) => this.y.get(node)(v[1]))\n        .curve(this.curve());\n\n      const render = () => {\n        const w = this.getResponsiveWidth();\n\n        svg.attr(\"width\", w);\n\n        const lx = this.x.range([left, w - right]);\n        lineGenerator.x((v) => lx(v[0]));\n        xAxisGroup.call(this.xAxis().bind(this)(lx));\n        yAxisGroup.call(this.yAxis().bind(this)(this.y.get(node)));\n\n        this.getSelectionWithRedrawContext(path)\n          .attr(\"d\", (d) => lineGenerator(this.multiple ? d[1] : d))\n          .attr(\"stroke\", this.color());\n      };\n\n      render();\n      select(window).on(`resize.${i}`, render);\n    });\n\n    return this;\n  }\n}\n","import { local, select, scaleLinear, max, axisBottom } from \"d3\";\nimport { yAxisLeft } from \"../util/axis\";\nimport Visual from \"./Visual\";\n\nexport default class ScatterPlot extends Visual {\n  constructor() {\n    super();\n    this.height(300);\n    this.margin({ top: 20, right: 20, bottom: 40, left: 40 });\n    this.color(\"steelblue\");\n    // this.label();\n    this.resize(true);\n    this.redraw(false);\n    // this.wrappx();\n    this.xAxis((scale) => {\n      return (g) => {\n        const axis = axisBottom(scale).ticks(this.getResponsiveWidth() / 80);\n        const selection = this.getSelectionWithRedrawContext(g);\n        selection.call(axis);\n      };\n    });\n    this.yAxis(yAxisLeft);\n\n    this.x = local();\n    this.y = local();\n  }\n\n  defaultXScale(data) {\n    return scaleLinear()\n      .domain([0, max(data.keys())])\n      .nice();\n  }\n\n  defaultYScale(data) {\n    return scaleLinear()\n      .domain([0, max(data.values())])\n      .nice();\n  }\n\n  draw(selections) {\n    selections.each((data, i, selection) => {\n      const { top, right, bottom, left } = this.margin();\n\n      const node = selection[i];\n\n      this.x.set(node, this.xScale() ?? this.defaultXScale(data));\n      this.y\n        .set(node, this.yScale() ?? this.defaultYScale(data))\n        .range([this.height() - bottom, top]);\n\n      const svg = select(node)\n        .attr(\"height\", this.height())\n        .attr(\"class\", \"scatter-plot\");\n      this.svg = svg;\n\n      const yAxisGroup = this.appendOnce(\"g\", \"y-axis\").attr(\n        \"transform\",\n        `translate(${left}, 0)`\n      );\n\n      const xAxisGroup = this.appendOnce(\"g\", \"x-axis\").attr(\n        \"transform\",\n        `translate(0, ${this.height() - bottom})`\n      );\n\n      const circles = svg\n        .selectAll(\".circle\")\n        .data(data)\n        .join(\"circle\")\n        .attr(\"class\", \"circle\")\n        .attr(\"fill\", this.color())\n        .attr(\"r\", 5)\n        .attr(\"cy\", (d) => this.y.get(node)(d[1]));\n\n      const render = () => {\n        const w = this.getResponsiveWidth();\n        svg.attr(\"width\", w);\n\n        const lx = this.x.get(node).range([left, w - right]);\n        xAxisGroup.call(this.xAxis().bind(this)(lx));\n        yAxisGroup.call(this.yAxis().bind(this)(this.y.get(node)));\n\n        circles.attr(\"cx\", (d) => lx(d[0]));\n      };\n\n      render();\n      select(window).on(`resize.${i}`, render);\n    });\n  }\n}\n","import { select } from \"d3\";\nimport { sankey, sankeyLinkHorizontal, sankeyCenter } from \"d3-sankey\";\nimport Visual from \"./Visual\";\n\nexport default class SankeyDiagram extends Visual {\n  constructor() {\n    super();\n    this.height(500);\n    this.margin({ left: 0, right: 0, top: 10, bottom: 10 });\n    this.resize(true);\n    this.redraw(false);\n    this.label(null);\n  }\n\n  draw(selections) {\n    selections.each((data, i, selection) => {\n      const { left, right, top, bottom } = this.margin();\n      const node = selection[i];\n      const svg = select(node)\n        .attr(\"height\", this.height())\n        .attr(\"class\", \"sankey-diagram\");\n      this.svg = svg;\n\n      const sankeyGenerator = sankey()\n        .nodeId((d) => d.id)\n        .nodeAlign(sankeyCenter)\n        .nodeSort(null);\n\n      const links = this.appendOnce(\"g\", \"link-group\")\n        .attr(\"stroke-opacity\", 0.5)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"gray\");\n\n      const nodes = this.appendOnce(\"g\", \"node-group\")\n        .attr(\"fill\", \"steelblue\")\n        .attr(\"opacity\", 0.8);\n\n      const labels = this.appendOnce(\"g\", \"label-group\");\n\n      const render = () => {\n        const w = this.getResponsiveWidth();\n        svg.attr(\"width\", w);\n\n        sankeyGenerator.extent([\n          [left, top],\n          [w - right, this.height() - bottom],\n        ]);\n\n        const graph = sankeyGenerator(data);\n\n        const ls = links\n          .selectAll(\".link\")\n          .data(graph.links)\n          .join(\"path\")\n          .attr(\"class\", \"link\")\n          .attr(\"d\", sankeyLinkHorizontal())\n          .attr(\"stroke-width\", (d) => d.width);\n\n        const title = this.label();\n\n        if (title) {\n          ls.each(function () {\n            const link = select(this);\n            const s = link.select(\"title\");\n            (s.empty() ? link.append(\"title\") : s).text(title);\n          });\n        }\n\n        ls.on(\"mouseover\", function () {\n          select(this).attr(\"stroke\", \"steelblue\");\n        });\n\n        ls.on(\"mouseout\", function () {\n          select(this).attr(\"stroke\", \"gray\");\n        });\n\n        nodes\n          .selectAll(\".node\")\n          .data(graph.nodes)\n          .join(\"rect\")\n          .attr(\"class\", \"node\")\n          .attr(\"x\", (d) => d.x0)\n          .attr(\"y\", (d) => d.y0)\n          .attr(\"width\", (d) => d.x1 - d.x0)\n          .attr(\"height\", (d) => d.y1 - d.y0);\n\n        labels\n          .selectAll(\".label\")\n          .data(graph.nodes)\n          .join(\"text\")\n          .attr(\"class\", \"label\")\n          .attr(\"x\", (d) => (d.x0 < w / 2 ? d.x1 + 6 : d.x0 - 6))\n          .attr(\"y\", (d) => (d.y1 + d.y0) / 2)\n          .attr(\"dy\", \"0.35em\")\n          .attr(\"text-anchor\", (d) => (d.x0 < w / 2 ? \"start\" : \"end\"))\n          .text((d) => d.name);\n      };\n      render();\n      select(window).on(`resize.${i}`, render);\n    });\n  }\n}\n","export {default as sankey} from \"./sankey.js\";\nexport {center as sankeyCenter, left as sankeyLeft, right as sankeyRight, justify as sankeyJustify} from \"./align.js\";\nexport {default as sankeyLinkHorizontal} from \"./sankeyLinkHorizontal.js\";\n","import {max, min, sum} from \"d3-array\";\nimport {justify} from \"./align.js\";\nimport constant from \"./constant.js\";\n\nfunction ascendingSourceBreadth(a, b) {\n  return ascendingBreadth(a.source, b.source) || a.index - b.index;\n}\n\nfunction ascendingTargetBreadth(a, b) {\n  return ascendingBreadth(a.target, b.target) || a.index - b.index;\n}\n\nfunction ascendingBreadth(a, b) {\n  return a.y0 - b.y0;\n}\n\nfunction value(d) {\n  return d.value;\n}\n\nfunction defaultId(d) {\n  return d.index;\n}\n\nfunction defaultNodes(graph) {\n  return graph.nodes;\n}\n\nfunction defaultLinks(graph) {\n  return graph.links;\n}\n\nfunction find(nodeById, id) {\n  const node = nodeById.get(id);\n  if (!node) throw new Error(\"missing: \" + id);\n  return node;\n}\n\nfunction computeLinkBreadths({nodes}) {\n  for (const node of nodes) {\n    let y0 = node.y0;\n    let y1 = y0;\n    for (const link of node.sourceLinks) {\n      link.y0 = y0 + link.width / 2;\n      y0 += link.width;\n    }\n    for (const link of node.targetLinks) {\n      link.y1 = y1 + link.width / 2;\n      y1 += link.width;\n    }\n  }\n}\n\nexport default function Sankey() {\n  let x0 = 0, y0 = 0, x1 = 1, y1 = 1; // extent\n  let dx = 24; // nodeWidth\n  let dy = 8, py; // nodePadding\n  let id = defaultId;\n  let align = justify;\n  let sort;\n  let linkSort;\n  let nodes = defaultNodes;\n  let links = defaultLinks;\n  let iterations = 6;\n\n  function sankey() {\n    const graph = {nodes: nodes.apply(null, arguments), links: links.apply(null, arguments)};\n    computeNodeLinks(graph);\n    computeNodeValues(graph);\n    computeNodeDepths(graph);\n    computeNodeHeights(graph);\n    computeNodeBreadths(graph);\n    computeLinkBreadths(graph);\n    return graph;\n  }\n\n  sankey.update = function(graph) {\n    computeLinkBreadths(graph);\n    return graph;\n  };\n\n  sankey.nodeId = function(_) {\n    return arguments.length ? (id = typeof _ === \"function\" ? _ : constant(_), sankey) : id;\n  };\n\n  sankey.nodeAlign = function(_) {\n    return arguments.length ? (align = typeof _ === \"function\" ? _ : constant(_), sankey) : align;\n  };\n\n  sankey.nodeSort = function(_) {\n    return arguments.length ? (sort = _, sankey) : sort;\n  };\n\n  sankey.nodeWidth = function(_) {\n    return arguments.length ? (dx = +_, sankey) : dx;\n  };\n\n  sankey.nodePadding = function(_) {\n    return arguments.length ? (dy = py = +_, sankey) : dy;\n  };\n\n  sankey.nodes = function(_) {\n    return arguments.length ? (nodes = typeof _ === \"function\" ? _ : constant(_), sankey) : nodes;\n  };\n\n  sankey.links = function(_) {\n    return arguments.length ? (links = typeof _ === \"function\" ? _ : constant(_), sankey) : links;\n  };\n\n  sankey.linkSort = function(_) {\n    return arguments.length ? (linkSort = _, sankey) : linkSort;\n  };\n\n  sankey.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], sankey) : [x1 - x0, y1 - y0];\n  };\n\n  sankey.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], sankey) : [[x0, y0], [x1, y1]];\n  };\n\n  sankey.iterations = function(_) {\n    return arguments.length ? (iterations = +_, sankey) : iterations;\n  };\n\n  function computeNodeLinks({nodes, links}) {\n    for (const [i, node] of nodes.entries()) {\n      node.index = i;\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    }\n    const nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d]));\n    for (const [i, link] of links.entries()) {\n      link.index = i;\n      let {source, target} = link;\n      if (typeof source !== \"object\") source = link.source = find(nodeById, source);\n      if (typeof target !== \"object\") target = link.target = find(nodeById, target);\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    }\n    if (linkSort != null) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(linkSort);\n        targetLinks.sort(linkSort);\n      }\n    }\n  }\n\n  function computeNodeValues({nodes}) {\n    for (const node of nodes) {\n      node.value = node.fixedValue === undefined\n          ? Math.max(sum(node.sourceLinks, value), sum(node.targetLinks, value))\n          : node.fixedValue;\n    }\n  }\n\n  function computeNodeDepths({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.depth = x;\n        for (const {target} of node.sourceLinks) {\n          next.add(target);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeHeights({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.height = x;\n        for (const {source} of node.targetLinks) {\n          next.add(source);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeLayers({nodes}) {\n    const x = max(nodes, d => d.depth) + 1;\n    const kx = (x1 - x0 - dx) / (x - 1);\n    const columns = new Array(x);\n    for (const node of nodes) {\n      const i = Math.max(0, Math.min(x - 1, Math.floor(align.call(null, node, x))));\n      node.layer = i;\n      node.x0 = x0 + i * kx;\n      node.x1 = node.x0 + dx;\n      if (columns[i]) columns[i].push(node);\n      else columns[i] = [node];\n    }\n    if (sort) for (const column of columns) {\n      column.sort(sort);\n    }\n    return columns;\n  }\n\n  function initializeNodeBreadths(columns) {\n    const ky = min(columns, c => (y1 - y0 - (c.length - 1) * py) / sum(c, value));\n    for (const nodes of columns) {\n      let y = y0;\n      for (const node of nodes) {\n        node.y0 = y;\n        node.y1 = y + node.value * ky;\n        y = node.y1 + py;\n        for (const link of node.sourceLinks) {\n          link.width = link.value * ky;\n        }\n      }\n      y = (y1 - y + py) / (nodes.length + 1);\n      for (let i = 0; i < nodes.length; ++i) {\n        const node = nodes[i];\n        node.y0 += y * (i + 1);\n        node.y1 += y * (i + 1);\n      }\n      reorderLinks(nodes);\n    }\n  }\n\n  function computeNodeBreadths(graph) {\n    const columns = computeNodeLayers(graph);\n    py = Math.min(dy, (y1 - y0) / (max(columns, c => c.length) - 1));\n    initializeNodeBreadths(columns);\n    for (let i = 0; i < iterations; ++i) {\n      const alpha = Math.pow(0.99, i);\n      const beta = Math.max(1 - alpha, (i + 1) / iterations);\n      relaxRightToLeft(columns, alpha, beta);\n      relaxLeftToRight(columns, alpha, beta);\n    }\n  }\n\n  // Reposition each node based on its incoming (target) links.\n  function relaxLeftToRight(columns, alpha, beta) {\n    for (let i = 1, n = columns.length; i < n; ++i) {\n      const column = columns[i];\n      for (const target of column) {\n        let y = 0;\n        let w = 0;\n        for (const {source, value} of target.targetLinks) {\n          let v = value * (target.layer - source.layer);\n          y += targetTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - target.y0) * alpha;\n        target.y0 += dy;\n        target.y1 += dy;\n        reorderNodeLinks(target);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  // Reposition each node based on its outgoing (source) links.\n  function relaxRightToLeft(columns, alpha, beta) {\n    for (let n = columns.length, i = n - 2; i >= 0; --i) {\n      const column = columns[i];\n      for (const source of column) {\n        let y = 0;\n        let w = 0;\n        for (const {target, value} of source.sourceLinks) {\n          let v = value * (target.layer - source.layer);\n          y += sourceTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - source.y0) * alpha;\n        source.y0 += dy;\n        source.y1 += dy;\n        reorderNodeLinks(source);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  function resolveCollisions(nodes, alpha) {\n    const i = nodes.length >> 1;\n    const subject = nodes[i];\n    resolveCollisionsBottomToTop(nodes, subject.y0 - py, i - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, subject.y1 + py, i + 1, alpha);\n    resolveCollisionsBottomToTop(nodes, y1, nodes.length - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, y0, 0, alpha);\n  }\n\n  // Push any overlapping nodes down.\n  function resolveCollisionsTopToBottom(nodes, y, i, alpha) {\n    for (; i < nodes.length; ++i) {\n      const node = nodes[i];\n      const dy = (y - node.y0) * alpha;\n      if (dy > 1e-6) node.y0 += dy, node.y1 += dy;\n      y = node.y1 + py;\n    }\n  }\n\n  // Push any overlapping nodes up.\n  function resolveCollisionsBottomToTop(nodes, y, i, alpha) {\n    for (; i >= 0; --i) {\n      const node = nodes[i];\n      const dy = (node.y1 - y) * alpha;\n      if (dy > 1e-6) node.y0 -= dy, node.y1 -= dy;\n      y = node.y0 - py;\n    }\n  }\n\n  function reorderNodeLinks({sourceLinks, targetLinks}) {\n    if (linkSort === undefined) {\n      for (const {source: {sourceLinks}} of targetLinks) {\n        sourceLinks.sort(ascendingTargetBreadth);\n      }\n      for (const {target: {targetLinks}} of sourceLinks) {\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  function reorderLinks(nodes) {\n    if (linkSort === undefined) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(ascendingTargetBreadth);\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  // Returns the target.y0 that would produce an ideal link from source to target.\n  function targetTop(source, target) {\n    let y = source.y0 - (source.sourceLinks.length - 1) * py / 2;\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y += width + py;\n    }\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  // Returns the source.y0 that would produce an ideal link from source to target.\n  function sourceTop(source, target) {\n    let y = target.y0 - (target.targetLinks.length - 1) * py / 2;\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y += width + py;\n    }\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  return sankey;\n}\n","export {default as bisect, bisectRight, bisectLeft, bisectCenter} from \"./bisect.js\";\nexport {default as ascending} from \"./ascending.js\";\nexport {default as bisector} from \"./bisector.js\";\nexport {default as count} from \"./count.js\";\nexport {default as cross} from \"./cross.js\";\nexport {default as cumsum} from \"./cumsum.js\";\nexport {default as descending} from \"./descending.js\";\nexport {default as deviation} from \"./deviation.js\";\nexport {default as extent} from \"./extent.js\";\nexport {Adder, fsum, fcumsum} from \"./fsum.js\";\nexport {default as group, groups, index, indexes, rollup, rollups} from \"./group.js\";\nexport {default as groupSort} from \"./groupSort.js\";\nexport {default as bin, default as histogram} from \"./bin.js\"; // Deprecated; use bin.\nexport {default as thresholdFreedmanDiaconis} from \"./threshold/freedmanDiaconis.js\";\nexport {default as thresholdScott} from \"./threshold/scott.js\";\nexport {default as thresholdSturges} from \"./threshold/sturges.js\";\nexport {default as max} from \"./max.js\";\nexport {default as maxIndex} from \"./maxIndex.js\";\nexport {default as mean} from \"./mean.js\";\nexport {default as median} from \"./median.js\";\nexport {default as merge} from \"./merge.js\";\nexport {default as min} from \"./min.js\";\nexport {default as minIndex} from \"./minIndex.js\";\nexport {default as nice} from \"./nice.js\";\nexport {default as pairs} from \"./pairs.js\";\nexport {default as permute} from \"./permute.js\";\nexport {default as quantile, quantileSorted} from \"./quantile.js\";\nexport {default as quickselect} from \"./quickselect.js\";\nexport {default as range} from \"./range.js\";\nexport {default as least} from \"./least.js\";\nexport {default as leastIndex} from \"./leastIndex.js\";\nexport {default as greatest} from \"./greatest.js\";\nexport {default as greatestIndex} from \"./greatestIndex.js\";\nexport {default as scan} from \"./scan.js\"; // Deprecated; use leastIndex.\nexport {default as shuffle, shuffler} from \"./shuffle.js\";\nexport {default as sum} from \"./sum.js\";\nexport {default as ticks, tickIncrement, tickStep} from \"./ticks.js\";\nexport {default as transpose} from \"./transpose.js\";\nexport {default as variance} from \"./variance.js\";\nexport {default as zip} from \"./zip.js\";\nexport {default as every} from \"./every.js\";\nexport {default as some} from \"./some.js\";\nexport {default as filter} from \"./filter.js\";\nexport {default as map} from \"./map.js\";\nexport {default as reduce} from \"./reduce.js\";\nexport {default as reverse} from \"./reverse.js\";\nexport {default as sort} from \"./sort.js\";\nexport {default as difference} from \"./difference.js\";\nexport {default as disjoint} from \"./disjoint.js\";\nexport {default as intersection} from \"./intersection.js\";\nexport {default as subset} from \"./subset.js\";\nexport {default as superset} from \"./superset.js\";\nexport {default as union} from \"./union.js\";\nexport {InternMap, InternSet} from \"internmap\";\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","import {min} from \"d3-array\";\n\nfunction targetDepth(d) {\n  return d.target.depth;\n}\n\nexport function left(node) {\n  return node.depth;\n}\n\nexport function right(node, n) {\n  return n - 1 - node.height;\n}\n\nexport function justify(node, n) {\n  return node.sourceLinks.length ? node.depth : n - 1;\n}\n\nexport function center(node) {\n  return node.targetLinks.length ? node.depth\n      : node.sourceLinks.length ? min(node.sourceLinks, targetDepth) - 1\n      : 0;\n}\n","export default function constant(x) {\n  return function() {\n    return x;\n  };\n}\n","import {linkHorizontal} from \"d3-shape\";\n\nfunction horizontalSource(d) {\n  return [d.source.x1, d.y0];\n}\n\nfunction horizontalTarget(d) {\n  return [d.target.x0, d.y1];\n}\n\nexport default function() {\n  return linkHorizontal()\n      .source(horizontalSource)\n      .target(horizontalTarget);\n}\n","export {default as arc} from \"./arc.js\";\nexport {default as area} from \"./area.js\";\nexport {default as line} from \"./line.js\";\nexport {default as pie} from \"./pie.js\";\nexport {default as areaRadial, default as radialArea} from \"./areaRadial.js\"; // Note: radialArea is deprecated!\nexport {default as lineRadial, default as radialLine} from \"./lineRadial.js\"; // Note: radialLine is deprecated!\nexport {default as pointRadial} from \"./pointRadial.js\";\nexport {linkHorizontal, linkVertical, linkRadial} from \"./link/index.js\";\n\nexport {default as symbol, symbols} from \"./symbol.js\";\nexport {default as symbolCircle} from \"./symbol/circle.js\";\nexport {default as symbolCross} from \"./symbol/cross.js\";\nexport {default as symbolDiamond} from \"./symbol/diamond.js\";\nexport {default as symbolSquare} from \"./symbol/square.js\";\nexport {default as symbolStar} from \"./symbol/star.js\";\nexport {default as symbolTriangle} from \"./symbol/triangle.js\";\nexport {default as symbolWye} from \"./symbol/wye.js\";\n\nexport {default as curveBasisClosed} from \"./curve/basisClosed.js\";\nexport {default as curveBasisOpen} from \"./curve/basisOpen.js\";\nexport {default as curveBasis} from \"./curve/basis.js\";\nexport {default as curveBundle} from \"./curve/bundle.js\";\nexport {default as curveCardinalClosed} from \"./curve/cardinalClosed.js\";\nexport {default as curveCardinalOpen} from \"./curve/cardinalOpen.js\";\nexport {default as curveCardinal} from \"./curve/cardinal.js\";\nexport {default as curveCatmullRomClosed} from \"./curve/catmullRomClosed.js\";\nexport {default as curveCatmullRomOpen} from \"./curve/catmullRomOpen.js\";\nexport {default as curveCatmullRom} from \"./curve/catmullRom.js\";\nexport {default as curveLinearClosed} from \"./curve/linearClosed.js\";\nexport {default as curveLinear} from \"./curve/linear.js\";\nexport {monotoneX as curveMonotoneX, monotoneY as curveMonotoneY} from \"./curve/monotone.js\";\nexport {default as curveNatural} from \"./curve/natural.js\";\nexport {default as curveStep, stepAfter as curveStepAfter, stepBefore as curveStepBefore} from \"./curve/step.js\";\n\nexport {default as stack} from \"./stack.js\";\nexport {default as stackOffsetExpand} from \"./offset/expand.js\";\nexport {default as stackOffsetDiverging} from \"./offset/diverging.js\";\nexport {default as stackOffsetNone} from \"./offset/none.js\";\nexport {default as stackOffsetSilhouette} from \"./offset/silhouette.js\";\nexport {default as stackOffsetWiggle} from \"./offset/wiggle.js\";\nexport {default as stackOrderAppearance} from \"./order/appearance.js\";\nexport {default as stackOrderAscending} from \"./order/ascending.js\";\nexport {default as stackOrderDescending} from \"./order/descending.js\";\nexport {default as stackOrderInsideOut} from \"./order/insideOut.js\";\nexport {default as stackOrderNone} from \"./order/none.js\";\nexport {default as stackOrderReverse} from \"./order/reverse.js\";\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","import {path} from \"d3-path\";\nimport {slice} from \"../array.js\";\nimport constant from \"../constant.js\";\nimport {x as pointX, y as pointY} from \"../point.js\";\nimport pointRadial from \"../pointRadial.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","export {default as path} from \"./path.js\";\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n"],"names":["parcelHelpers","require","export","exports","_wrapDefault","default","_areaChartDefault","_barChartDefault","_columnChartDefault","_groupedBarChartDefault","_groupedColumnChartDefault","_stackedBarChartDefault","_stackedColumnChartDefault","_lineChartDefault","_scatterPlotDefault","_sankeyDiagramDefault","build","_color","exportAll","_wrap","_areaChart","_barChart","_columnChart","_groupedBarChart","_groupedColumnChart","_stackedBarChart","_stackedColumnChart","_lineChart","_scatterPlot","_sankeyDiagram","chart","draw","bind","schemeMain","schemePolitical","_d3","length","el","node","getComputedTextLength","selection","w","l","maxTextL","maxSpanL","lencomp","text","context","Math","max","each","select","this","words","split","reverse","word","line","x","attr","y","tspan","append","pop","push","join","AreaChart","_visual","_axis","_curve","WeakMap","_visualDefault","curve","c","arguments","_classPrivateFieldSetMjsDefault","_classPrivateFieldGetMjsDefault","defaultXScale","data","scaleTime","domain","extent","keys","defaultYScale","maximum","multiple","Array","from","values","map","d","sum","scaleLinear","nice","selections","i","next","value","Map","left","top","right","bottom","margin","ref","ref1","xScale","set","yScale","range","height","svg","yAxisGroup","appendOnce","xAxisGroup","series","stack","key","get","scale","min","areaGenerator","area","y1","y0","path","selectAll","datum","render","getResponsiveWidth","call","xAxis","yAxis","getSelectionWithRedrawContext","color","window","on","constructor","super","_classPrivateFieldInitMjsDefault","resize","redraw","xAxisBottom","yAxisLeft","curveLinear","local","_classExtractFieldDescriptorMjs","_classApplyDescriptorGetMjs","receiver","privateMap","descriptor","_classExtractFieldDescriptorMjsDefault","_classApplyDescriptorGetMjsDefault","action","has","TypeError","_checkPrivateRedeclarationMjs","obj","_checkPrivateRedeclarationMjsDefault","privateCollection","_classApplyDescriptorSetMjs","_classApplyDescriptorSetMjsDefault","writable","Visual","_width","_height","_margin","_xScale","_xAxis","_yScale","_yAxis","_label","_resize","_redraw","_wrappx","width","h","m","_objectSpreadMjsDefault","s","a","label","r","wrappx","px","element","classSelector","cw","parentNode","clientWidth","transition","duration","_definePropertyMjs","target","source","ownKeys","Object","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","_definePropertyMjsDefault","defineProperty","configurable","xAxisTop","g","axis","axisTop","ticks","axisBottom","tickSize","axisLeft","BarChart","bar","rect","bandwidth","barLabel","scaleBand","padding","bars","labels","lx","ColumnChart","GroupedBarChart","entries","v","groups","GroupedColumnChart","x0","x1","StackedBarChart","k","_","StackedColumnChart","LineChart","flat","toLowerCase","lineGenerator","ScatterPlot","circles","SankeyDiagram","_d3Sankey","sankeyGenerator","sankey","nodeId","id","nodeAlign","sankeyCenter","nodeSort","links","nodes","graph","ls","sankeyLinkHorizontal","title","link","empty","name","_sankeyJsDefault","_alignJs","center","justify","_sankeyLinkHorizontalJsDefault","_sankeyJs","_sankeyLinkHorizontalJs","_d3Array","_constantJs","ascendingSourceBreadth","b","ascendingBreadth","index","ascendingTargetBreadth","defaultId","defaultNodes","defaultLinks","find","nodeById","Error","computeLinkBreadths","sourceLinks","link1","targetLinks","py","sort","linkSort","dx","dy","align","iterations","apply","computeNodeLinks","computeNodeValues","computeNodeDepths","computeNodeHeights","computeNodeBreadths","i1","undefined","fixedValue","n","current","Set","size","depth","add","columns","kx","floor","layer","column","computeNodeLayers","ky","node1","reorderLinks","initializeNodeBreadths","alpha","pow","beta","relaxRightToLeft","relaxLeftToRight","targetTop","reorderNodeLinks","resolveCollisions","sourceTop","subject","resolveCollisionsBottomToTop","resolveCollisionsTopToBottom","sourceLinks1","targetLinks1","width1","update","_constantJsDefault","nodeWidth","nodePadding","_bisectJsDefault","_bisectJs","bisectRight","bisectLeft","bisectCenter","_ascendingJsDefault","_bisectorJsDefault","_countJsDefault","_crossJsDefault","_cumsumJsDefault","_descendingJsDefault","_deviationJsDefault","_extentJsDefault","_fsumJs","Adder","fsum","fcumsum","_groupJsDefault","_groupJs","indexes","rollup","rollups","_groupSortJsDefault","_binJsDefault","_freedmanDiaconisJsDefault","_scottJsDefault","_sturgesJsDefault","_maxJsDefault","_maxIndexJsDefault","_meanJsDefault","_medianJsDefault","_mergeJsDefault","_minJsDefault","_minIndexJsDefault","_niceJsDefault","_pairsJsDefault","_permuteJsDefault","_quantileJsDefault","_quantileJs","quantileSorted","_quickselectJsDefault","_rangeJsDefault","_leastJsDefault","_leastIndexJsDefault","_greatestJsDefault","_greatestIndexJsDefault","_scanJsDefault","_shuffleJsDefault","_shuffleJs","shuffler","_sumJsDefault","_ticksJsDefault","_ticksJs","tickIncrement","tickStep","_transposeJsDefault","_varianceJsDefault","_zipJsDefault","_everyJsDefault","_someJsDefault","_filterJsDefault","_mapJsDefault","_reduceJsDefault","_reverseJsDefault","_sortJsDefault","_differenceJsDefault","_disjointJsDefault","_intersectionJsDefault","_subsetJsDefault","_supersetJsDefault","_unionJsDefault","_internmap","InternMap","InternSet","_ascendingJs","_bisectorJs","_countJs","_crossJs","_cumsumJs","_descendingJs","_deviationJs","_extentJs","_groupSortJs","_binJs","_freedmanDiaconisJs","_scottJs","_sturgesJs","_maxJs","_maxIndexJs","_meanJs","_medianJs","_mergeJs","_minJs","_minIndexJs","_niceJs","_pairsJs","_permuteJs","_quickselectJs","_rangeJs","_leastJs","_leastIndexJs","_greatestJs","_greatestIndexJs","_scanJs","_sumJs","_transposeJs","_varianceJs","_zipJs","_everyJs","_someJs","_filterJs","_mapJs","_reduceJs","_reverseJs","_sortJs","_differenceJs","_disjointJs","_intersectionJs","_subsetJs","_supersetJs","_unionJs","valueof","value1","targetDepth","_d3Shape","horizontalSource","horizontalTarget","linkHorizontal","_arcJsDefault","_areaJsDefault","_lineJsDefault","_pieJsDefault","_areaRadialJsDefault","_lineRadialJsDefault","_pointRadialJsDefault","_indexJs","linkVertical","linkRadial","_symbolJsDefault","_symbolJs","symbols","_circleJsDefault","_diamondJsDefault","_squareJsDefault","_starJsDefault","_triangleJsDefault","_wyeJsDefault","_basisClosedJsDefault","_basisOpenJsDefault","_basisJsDefault","_bundleJsDefault","_cardinalClosedJsDefault","_cardinalOpenJsDefault","_cardinalJsDefault","_catmullRomClosedJsDefault","_catmullRomOpenJsDefault","_catmullRomJsDefault","_linearClosedJsDefault","_linearJsDefault","_monotoneJs","monotoneX","monotoneY","_naturalJsDefault","_stepJsDefault","_stepJs","stepAfter","stepBefore","_stackJsDefault","_expandJsDefault","_divergingJsDefault","_noneJsDefault","_silhouetteJsDefault","_wiggleJsDefault","_appearanceJsDefault","_insideOutJsDefault","_noneJsDefault1","_arcJs","_areaJs","_lineJs","_pieJs","_areaRadialJs","_lineRadialJs","_pointRadialJs","_circleJs","_diamondJs","_squareJs","_starJs","_triangleJs","_wyeJs","_basisClosedJs","_basisOpenJs","_basisJs","_bundleJs","_cardinalClosedJs","_cardinalOpenJs","_cardinalJs","_catmullRomClosedJs","_catmullRomOpenJs","_catmullRomJs","_linearClosedJs","_linearJs","_naturalJs","_stackJs","_expandJs","_divergingJs","_noneJs","_silhouetteJs","_wiggleJs","_appearanceJs","_insideOutJs","_noneJs1","cos","PI","sin","_d3Path","_arrayJs","_pointJs","linkSource","linkTarget","buffer","argv","slice","t","curveHorizontal","moveTo","bezierCurveTo","curveVertical","curveRadial","p0","p1","p2","p3","angle","radius","_pathJsDefault","_pathJs","pi","tau","epsilon","tauEpsilon","Path","_x0","_y0","_x1","_y1","prototype","closePath","lineTo","quadraticCurveTo","x2","y2","arcTo","x21","y21","x01","y01","l01_2","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","tan","acos","t01","t21","arc","a0","a1","ccw","da","toString","p"],"version":3,"file":"bar-chart-grouped.003edd1e.js.map"}